// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: landLords.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

/////////////////牌值参照////////////////////////////////////////////////////////////////////////////////////////
//  0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, //方块 A - K, 小王, 大王
//  0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, //梅花 A - K
//  0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, //红桃 A - K
//  0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, //黑桃 A - K
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//【对战类游戏】
// 玩家信息(刚入场时,只有座位号和id)
type LandLordsPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyInfo     *PlayerInfo `protobuf:"bytes,1,opt,name=MyInfo,proto3" json:"MyInfo,omitempty"`
	IsMing     bool        `protobuf:"varint,2,opt,name=IsMing,proto3" json:"IsMing,omitempty"`         // 是否明牌
	Cards      []byte      `protobuf:"bytes,3,opt,name=Cards,proto3" json:"Cards,omitempty"`            // 牌 (仅提供手牌数目的牌值)
	Multiple   int64       `protobuf:"varint,4,opt,name=Multiple,proto3" json:"Multiple,omitempty"`     // 当前倍数
	CallScore  int64       `protobuf:"varint,5,opt,name=CallScore,proto3" json:"CallScore,omitempty"`   // 叫分
	GainScore  int64       `protobuf:"varint,6,opt,name=GainScore,proto3" json:"GainScore,omitempty"`   // 输赢分值
	TotalScore int64       `protobuf:"varint,7,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"` // 总积分(当不为系统房时,该分值可以为负分)
}

func (x *LandLordsPlayer) Reset() {
	*x = LandLordsPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsPlayer) ProtoMessage() {}

func (x *LandLordsPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsPlayer.ProtoReflect.Descriptor instead.
func (*LandLordsPlayer) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{0}
}

func (x *LandLordsPlayer) GetMyInfo() *PlayerInfo {
	if x != nil {
		return x.MyInfo
	}
	return nil
}

func (x *LandLordsPlayer) GetIsMing() bool {
	if x != nil {
		return x.IsMing
	}
	return false
}

func (x *LandLordsPlayer) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *LandLordsPlayer) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *LandLordsPlayer) GetCallScore() int64 {
	if x != nil {
		return x.CallScore
	}
	return 0
}

func (x *LandLordsPlayer) GetGainScore() int64 {
	if x != nil {
		return x.GainScore
	}
	return 0
}

func (x *LandLordsPlayer) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

//入场 (场景)
type LandLordsSceneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp  int64              `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`  // 时间戳
	Inning     string             `protobuf:"bytes,2,opt,name=Inning,proto3" json:"Inning,omitempty"`         // 牌局号
	BankerID   uint64             `protobuf:"varint,3,opt,name=BankerID,proto3" json:"BankerID,omitempty"`    // 当前庄家
	CurrentID  uint64             `protobuf:"varint,4,opt,name=CurrentID,proto3" json:"CurrentID,omitempty"`  // 当前玩家ID
	BaseScore  int64              `protobuf:"varint,5,opt,name=BaseScore,proto3" json:"BaseScore,omitempty"`  // 当前底分()
	OutCards   []byte             `protobuf:"bytes,6,opt,name=OutCards,proto3" json:"OutCards,omitempty"`     // 已经出过的牌值
	TableCards *CardInfo          `protobuf:"bytes,7,opt,name=TableCards,proto3" json:"TableCards,omitempty"` // 上一家的出牌(场景恢复)
	AllPlayers []*LandLordsPlayer `protobuf:"bytes,8,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` // 玩家信息
}

func (x *LandLordsSceneResp) Reset() {
	*x = LandLordsSceneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsSceneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsSceneResp) ProtoMessage() {}

func (x *LandLordsSceneResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsSceneResp.ProtoReflect.Descriptor instead.
func (*LandLordsSceneResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{1}
}

func (x *LandLordsSceneResp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *LandLordsSceneResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

func (x *LandLordsSceneResp) GetBankerID() uint64 {
	if x != nil {
		return x.BankerID
	}
	return 0
}

func (x *LandLordsSceneResp) GetCurrentID() uint64 {
	if x != nil {
		return x.CurrentID
	}
	return 0
}

func (x *LandLordsSceneResp) GetBaseScore() int64 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

func (x *LandLordsSceneResp) GetOutCards() []byte {
	if x != nil {
		return x.OutCards
	}
	return nil
}

func (x *LandLordsSceneResp) GetTableCards() *CardInfo {
	if x != nil {
		return x.TableCards
	}
	return nil
}

func (x *LandLordsSceneResp) GetAllPlayers() []*LandLordsPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

// 服务端推送
//(空闲)
type LandLordsStateFreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *LandLordsStateFreeResp) Reset() {
	*x = LandLordsStateFreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateFreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateFreeResp) ProtoMessage() {}

func (x *LandLordsStateFreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateFreeResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateFreeResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{2}
}

func (x *LandLordsStateFreeResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(开始)
type LandLordsStateStartResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	Inning string    `protobuf:"bytes,2,opt,name=Inning,proto3" json:"Inning,omitempty"` // 牌局号
}

func (x *LandLordsStateStartResp) Reset() {
	*x = LandLordsStateStartResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateStartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateStartResp) ProtoMessage() {}

func (x *LandLordsStateStartResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateStartResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateStartResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{3}
}

func (x *LandLordsStateStartResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *LandLordsStateStartResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

//(叫分)
type LandLordsStateCallResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`    // 叫分剩余时间
	UserID uint64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
}

func (x *LandLordsStateCallResp) Reset() {
	*x = LandLordsStateCallResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateCallResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateCallResp) ProtoMessage() {}

func (x *LandLordsStateCallResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateCallResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateCallResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{4}
}

func (x *LandLordsStateCallResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *LandLordsStateCallResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//(加倍)
type LandLordsStateDoubleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"` // 叫分剩余时间
}

func (x *LandLordsStateDoubleResp) Reset() {
	*x = LandLordsStateDoubleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateDoubleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateDoubleResp) ProtoMessage() {}

func (x *LandLordsStateDoubleResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateDoubleResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateDoubleResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{5}
}

func (x *LandLordsStateDoubleResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(游戏中)
type LandLordsStatePlayingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	TurnID uint64    `protobuf:"varint,2,opt,name=TurnID,proto3" json:"TurnID,omitempty"` //轮到谁
}

func (x *LandLordsStatePlayingResp) Reset() {
	*x = LandLordsStatePlayingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStatePlayingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStatePlayingResp) ProtoMessage() {}

func (x *LandLordsStatePlayingResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStatePlayingResp.ProtoReflect.Descriptor instead.
func (*LandLordsStatePlayingResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{6}
}

func (x *LandLordsStatePlayingResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *LandLordsStatePlayingResp) GetTurnID() uint64 {
	if x != nil {
		return x.TurnID
	}
	return 0
}

//(开奖)
type LandLordsStateOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	WinID uint64    `protobuf:"varint,2,opt,name=WinID,proto3" json:"WinID,omitempty"` //谁赢了
}

func (x *LandLordsStateOpenResp) Reset() {
	*x = LandLordsStateOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateOpenResp) ProtoMessage() {}

func (x *LandLordsStateOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateOpenResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateOpenResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{7}
}

func (x *LandLordsStateOpenResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *LandLordsStateOpenResp) GetWinID() uint64 {
	if x != nil {
		return x.WinID
	}
	return 0
}

//(结束)
type LandLordsStateOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *LandLordsStateOverResp) Reset() {
	*x = LandLordsStateOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsStateOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsStateOverResp) ProtoMessage() {}

func (x *LandLordsStateOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsStateOverResp.ProtoReflect.Descriptor instead.
func (*LandLordsStateOverResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{8}
}

func (x *LandLordsStateOverResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

///////////////////////////
// 发牌
type LandLordsDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`      // 玩家ID
	CardsHand []byte `protobuf:"bytes,2,opt,name=CardsHand,proto3" json:"CardsHand,omitempty"` // 手牌
}

func (x *LandLordsDealResp) Reset() {
	*x = LandLordsDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsDealResp) ProtoMessage() {}

func (x *LandLordsDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsDealResp.ProtoReflect.Descriptor instead.
func (*LandLordsDealResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{9}
}

func (x *LandLordsDealResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LandLordsDealResp) GetCardsHand() []byte {
	if x != nil {
		return x.CardsHand
	}
	return nil
}

// 广播抢地主后的玩家(抱歉 此处仅用于展示用,插入牌值用LandLordsDealResp)
type LandLordsBottomCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankerID    uint64 `protobuf:"varint,1,opt,name=BankerID,proto3" json:"BankerID,omitempty"`      // 玩家ID
	CardsBottom []byte `protobuf:"bytes,2,opt,name=CardsBottom,proto3" json:"CardsBottom,omitempty"` // 三张底牌
	BaseScore   int64  `protobuf:"varint,3,opt,name=BaseScore,proto3" json:"BaseScore,omitempty"`    // 当前叫分
}

func (x *LandLordsBottomCardResp) Reset() {
	*x = LandLordsBottomCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsBottomCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsBottomCardResp) ProtoMessage() {}

func (x *LandLordsBottomCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsBottomCardResp.ProtoReflect.Descriptor instead.
func (*LandLordsBottomCardResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{10}
}

func (x *LandLordsBottomCardResp) GetBankerID() uint64 {
	if x != nil {
		return x.BankerID
	}
	return 0
}

func (x *LandLordsBottomCardResp) GetCardsBottom() []byte {
	if x != nil {
		return x.CardsBottom
	}
	return nil
}

func (x *LandLordsBottomCardResp) GetBaseScore() int64 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

///////////////////////////////////
//游戏消息
//准备
type LandLordsReadyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *LandLordsReadyReq) Reset() {
	*x = LandLordsReadyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsReadyReq) ProtoMessage() {}

func (x *LandLordsReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsReadyReq.ProtoReflect.Descriptor instead.
func (*LandLordsReadyReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{11}
}

func (x *LandLordsReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type LandLordsReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool   `protobuf:"varint,1,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
	UserID  uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *LandLordsReadyResp) Reset() {
	*x = LandLordsReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsReadyResp) ProtoMessage() {}

func (x *LandLordsReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsReadyResp.ProtoReflect.Descriptor instead.
func (*LandLordsReadyResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{12}
}

func (x *LandLordsReadyResp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *LandLordsReadyResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 叫分
type LandLordsCallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score int64 `protobuf:"varint,1,opt,name=Score,proto3" json:"Score,omitempty"` // 叫分 0:不叫 1: 2: 3:
}

func (x *LandLordsCallReq) Reset() {
	*x = LandLordsCallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsCallReq) ProtoMessage() {}

func (x *LandLordsCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsCallReq.ProtoReflect.Descriptor instead.
func (*LandLordsCallReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{13}
}

func (x *LandLordsCallReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type LandLordsCallResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
	Score  int64  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`   // 叫分 0:不叫 1: 2: 3:
}

func (x *LandLordsCallResp) Reset() {
	*x = LandLordsCallResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsCallResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsCallResp) ProtoMessage() {}

func (x *LandLordsCallResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsCallResp.ProtoReflect.Descriptor instead.
func (*LandLordsCallResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{14}
}

func (x *LandLordsCallResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LandLordsCallResp) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 加倍
type LandLordsDoubleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Multiple int64 `protobuf:"varint,1,opt,name=Multiple,proto3" json:"Multiple,omitempty"` // 额外倍数  1:加倍 2:超级加倍:
}

func (x *LandLordsDoubleReq) Reset() {
	*x = LandLordsDoubleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsDoubleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsDoubleReq) ProtoMessage() {}

func (x *LandLordsDoubleReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsDoubleReq.ProtoReflect.Descriptor instead.
func (*LandLordsDoubleReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{15}
}

func (x *LandLordsDoubleReq) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type LandLordsDoubleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`     // 玩家ID
	Multiple int64  `protobuf:"varint,2,opt,name=Multiple,proto3" json:"Multiple,omitempty"` // 额外倍数  1:加倍 2:超级加倍:
}

func (x *LandLordsDoubleResp) Reset() {
	*x = LandLordsDoubleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsDoubleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsDoubleResp) ProtoMessage() {}

func (x *LandLordsDoubleResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsDoubleResp.ProtoReflect.Descriptor instead.
func (*LandLordsDoubleResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{16}
}

func (x *LandLordsDoubleResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LandLordsDoubleResp) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

//明牌
type LandLordsMingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LandLordsMingReq) Reset() {
	*x = LandLordsMingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsMingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsMingReq) ProtoMessage() {}

func (x *LandLordsMingReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsMingReq.ProtoReflect.Descriptor instead.
func (*LandLordsMingReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{17}
}

type LandLordsMingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
}

func (x *LandLordsMingResp) Reset() {
	*x = LandLordsMingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsMingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsMingResp) ProtoMessage() {}

func (x *LandLordsMingResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsMingResp.ProtoReflect.Descriptor instead.
func (*LandLordsMingResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{18}
}

func (x *LandLordsMingResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 托管
type LandLordsTrusteeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTrustee bool `protobuf:"varint,1,opt,name=IsTrustee,proto3" json:"IsTrustee,omitempty"` //是否托管
}

func (x *LandLordsTrusteeReq) Reset() {
	*x = LandLordsTrusteeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsTrusteeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsTrusteeReq) ProtoMessage() {}

func (x *LandLordsTrusteeReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsTrusteeReq.ProtoReflect.Descriptor instead.
func (*LandLordsTrusteeReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{19}
}

func (x *LandLordsTrusteeReq) GetIsTrustee() bool {
	if x != nil {
		return x.IsTrustee
	}
	return false
}

type LandLordsTrusteeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`       // 玩家ID
	IsTrustee bool   `protobuf:"varint,2,opt,name=IsTrustee,proto3" json:"IsTrustee,omitempty"` //是否托管
}

func (x *LandLordsTrusteeResp) Reset() {
	*x = LandLordsTrusteeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsTrusteeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsTrusteeResp) ProtoMessage() {}

func (x *LandLordsTrusteeResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsTrusteeResp.ProtoReflect.Descriptor instead.
func (*LandLordsTrusteeResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{20}
}

func (x *LandLordsTrusteeResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LandLordsTrusteeResp) GetIsTrustee() bool {
	if x != nil {
		return x.IsTrustee
	}
	return false
}

// 出牌
type LandLordsOutCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards *CardInfo `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"` //
}

func (x *LandLordsOutCardReq) Reset() {
	*x = LandLordsOutCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsOutCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsOutCardReq) ProtoMessage() {}

func (x *LandLordsOutCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsOutCardReq.ProtoReflect.Descriptor instead.
func (*LandLordsOutCardReq) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{21}
}

func (x *LandLordsOutCardReq) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

type LandLordsOutCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
	Cards  *CardInfo `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`    // 牌值为空==要不起
}

func (x *LandLordsOutCardResp) Reset() {
	*x = LandLordsOutCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsOutCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsOutCardResp) ProtoMessage() {}

func (x *LandLordsOutCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsOutCardResp.ProtoReflect.Descriptor instead.
func (*LandLordsOutCardResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{22}
}

func (x *LandLordsOutCardResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LandLordsOutCardResp) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//-----------------------------
// 结算
type LandLordsCheckoutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinnerID   uint64             `protobuf:"varint,1,opt,name=WinnerID,proto3" json:"WinnerID,omitempty"`    //赢家ID
	AllPlayers []*LandLordsPlayer `protobuf:"bytes,2,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` // 所有玩家得分
}

func (x *LandLordsCheckoutResp) Reset() {
	*x = LandLordsCheckoutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_landLords_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandLordsCheckoutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandLordsCheckoutResp) ProtoMessage() {}

func (x *LandLordsCheckoutResp) ProtoReflect() protoreflect.Message {
	mi := &file_landLords_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandLordsCheckoutResp.ProtoReflect.Descriptor instead.
func (*LandLordsCheckoutResp) Descriptor() ([]byte, []int) {
	return file_landLords_proto_rawDescGZIP(), []int{23}
}

func (x *LandLordsCheckoutResp) GetWinnerID() uint64 {
	if x != nil {
		return x.WinnerID
	}
	return 0
}

func (x *LandLordsCheckoutResp) GetAllPlayers() []*LandLordsPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

var File_landLords_proto protoreflect.FileDescriptor

var file_landLords_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x67, 0x6f, 0x1a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f,
	0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x4d, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x49, 0x73, 0x4d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x69,
	0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x61,
	0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa1, 0x02, 0x0a, 0x12, 0x4c, 0x61, 0x6e, 0x64,
	0x4c, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x2e,
	0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x3c, 0x0a, 0x16, 0x4c,
	0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x4c, 0x61, 0x6e,
	0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x22, 0x54, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x18, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f,
	0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f,
	0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x75, 0x72, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x44, 0x22,
	0x52, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x57, 0x69,
	0x6e, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x22, 0x75, 0x0a, 0x17,
	0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x42, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x42,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x22, 0x46, 0x0a, 0x12, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x10, 0x4c, 0x61,
	0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64,
	0x73, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x4c, 0x61, 0x6e, 0x64, 0x4c,
	0x6f, 0x72, 0x64, 0x73, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x4c, 0x61, 0x6e,
	0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64,
	0x73, 0x4d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x22, 0x2b, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x64,
	0x4c, 0x6f, 0x72, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x13, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72,
	0x64, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x4c, 0x61,
	0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49,
	0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x4c, 0x61, 0x6e, 0x64,
	0x4c, 0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x52, 0x0a, 0x14, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73,
	0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x68, 0x0a, 0x15, 0x4c, 0x61, 0x6e, 0x64, 0x4c,
	0x6f, 0x72, 0x64, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a,
	0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x6f, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_landLords_proto_rawDescOnce sync.Once
	file_landLords_proto_rawDescData = file_landLords_proto_rawDesc
)

func file_landLords_proto_rawDescGZIP() []byte {
	file_landLords_proto_rawDescOnce.Do(func() {
		file_landLords_proto_rawDescData = protoimpl.X.CompressGZIP(file_landLords_proto_rawDescData)
	})
	return file_landLords_proto_rawDescData
}

var file_landLords_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_landLords_proto_goTypes = []interface{}{
	(*LandLordsPlayer)(nil),           // 0: go.LandLordsPlayer
	(*LandLordsSceneResp)(nil),        // 1: go.LandLordsSceneResp
	(*LandLordsStateFreeResp)(nil),    // 2: go.LandLordsStateFreeResp
	(*LandLordsStateStartResp)(nil),   // 3: go.LandLordsStateStartResp
	(*LandLordsStateCallResp)(nil),    // 4: go.LandLordsStateCallResp
	(*LandLordsStateDoubleResp)(nil),  // 5: go.LandLordsStateDoubleResp
	(*LandLordsStatePlayingResp)(nil), // 6: go.LandLordsStatePlayingResp
	(*LandLordsStateOpenResp)(nil),    // 7: go.LandLordsStateOpenResp
	(*LandLordsStateOverResp)(nil),    // 8: go.LandLordsStateOverResp
	(*LandLordsDealResp)(nil),         // 9: go.LandLordsDealResp
	(*LandLordsBottomCardResp)(nil),   // 10: go.LandLordsBottomCardResp
	(*LandLordsReadyReq)(nil),         // 11: go.LandLordsReadyReq
	(*LandLordsReadyResp)(nil),        // 12: go.LandLordsReadyResp
	(*LandLordsCallReq)(nil),          // 13: go.LandLordsCallReq
	(*LandLordsCallResp)(nil),         // 14: go.LandLordsCallResp
	(*LandLordsDoubleReq)(nil),        // 15: go.LandLordsDoubleReq
	(*LandLordsDoubleResp)(nil),       // 16: go.LandLordsDoubleResp
	(*LandLordsMingReq)(nil),          // 17: go.LandLordsMingReq
	(*LandLordsMingResp)(nil),         // 18: go.LandLordsMingResp
	(*LandLordsTrusteeReq)(nil),       // 19: go.LandLordsTrusteeReq
	(*LandLordsTrusteeResp)(nil),      // 20: go.LandLordsTrusteeResp
	(*LandLordsOutCardReq)(nil),       // 21: go.LandLordsOutCardReq
	(*LandLordsOutCardResp)(nil),      // 22: go.LandLordsOutCardResp
	(*LandLordsCheckoutResp)(nil),     // 23: go.LandLordsCheckoutResp
	(*PlayerInfo)(nil),                // 24: go.PlayerInfo
	(*CardInfo)(nil),                  // 25: go.CardInfo
	(*TimeInfo)(nil),                  // 26: go.TimeInfo
}
var file_landLords_proto_depIdxs = []int32{
	24, // 0: go.LandLordsPlayer.MyInfo:type_name -> go.PlayerInfo
	25, // 1: go.LandLordsSceneResp.TableCards:type_name -> go.CardInfo
	0,  // 2: go.LandLordsSceneResp.AllPlayers:type_name -> go.LandLordsPlayer
	26, // 3: go.LandLordsStateFreeResp.Times:type_name -> go.TimeInfo
	26, // 4: go.LandLordsStateStartResp.Times:type_name -> go.TimeInfo
	26, // 5: go.LandLordsStateCallResp.Times:type_name -> go.TimeInfo
	26, // 6: go.LandLordsStateDoubleResp.Times:type_name -> go.TimeInfo
	26, // 7: go.LandLordsStatePlayingResp.Times:type_name -> go.TimeInfo
	26, // 8: go.LandLordsStateOpenResp.Times:type_name -> go.TimeInfo
	26, // 9: go.LandLordsStateOverResp.Times:type_name -> go.TimeInfo
	25, // 10: go.LandLordsOutCardReq.Cards:type_name -> go.CardInfo
	25, // 11: go.LandLordsOutCardResp.Cards:type_name -> go.CardInfo
	0,  // 12: go.LandLordsCheckoutResp.AllPlayers:type_name -> go.LandLordsPlayer
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_landLords_proto_init() }
func file_landLords_proto_init() {
	if File_landLords_proto != nil {
		return
	}
	file_gamecomm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_landLords_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsSceneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateFreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateStartResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateCallResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateDoubleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStatePlayingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsStateOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsBottomCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsReadyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsCallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsCallResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsDoubleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsDoubleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsMingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsMingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsTrusteeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsTrusteeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsOutCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsOutCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_landLords_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandLordsCheckoutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_landLords_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_landLords_proto_goTypes,
		DependencyIndexes: file_landLords_proto_depIdxs,
		MessageInfos:      file_landLords_proto_msgTypes,
	}.Build()
	File_landLords_proto = out.File
	file_landLords_proto_rawDesc = nil
	file_landLords_proto_goTypes = nil
	file_landLords_proto_depIdxs = nil
}
