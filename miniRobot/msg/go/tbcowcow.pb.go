// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: tbcowcow.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// kindID 1005
//通比牛牛玩家信息
type TbcowcowPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyInfo *PlayerInfo `protobuf:"bytes,1,opt,name=MyInfo,proto3" json:"MyInfo,omitempty"` //
	Cards  *CardInfo   `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`   //牌值
	// int64  CallScore = 3;   //叫分分值
	BetScore   int64 `protobuf:"varint,4,opt,name=BetScore,proto3" json:"BetScore,omitempty"`     //下注分值
	GainScore  int64 `protobuf:"varint,5,opt,name=GainScore,proto3" json:"GainScore,omitempty"`   //输赢分值
	TotalScore int64 `protobuf:"varint,6,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"` //总积分
}

func (x *TbcowcowPlayer) Reset() {
	*x = TbcowcowPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowPlayer) ProtoMessage() {}

func (x *TbcowcowPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowPlayer.ProtoReflect.Descriptor instead.
func (*TbcowcowPlayer) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{0}
}

func (x *TbcowcowPlayer) GetMyInfo() *PlayerInfo {
	if x != nil {
		return x.MyInfo
	}
	return nil
}

func (x *TbcowcowPlayer) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *TbcowcowPlayer) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

func (x *TbcowcowPlayer) GetGainScore() int64 {
	if x != nil {
		return x.GainScore
	}
	return 0
}

func (x *TbcowcowPlayer) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

//入场
type EnterGameTBCCResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64          `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏标识
	ChairNum uint32          `protobuf:"varint,2,opt,name=ChairNum,proto3" json:"ChairNum,omitempty"` //椅子编号(不满足req的此项时,将由系统分配,并返回提示)
	Player   *TbcowcowPlayer `protobuf:"bytes,3,opt,name=Player,proto3" json:"Player,omitempty"`
}

func (x *EnterGameTBCCResp) Reset() {
	*x = EnterGameTBCCResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterGameTBCCResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameTBCCResp) ProtoMessage() {}

func (x *EnterGameTBCCResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameTBCCResp.ProtoReflect.Descriptor instead.
func (*EnterGameTBCCResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{1}
}

func (x *EnterGameTBCCResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *EnterGameTBCCResp) GetChairNum() uint32 {
	if x != nil {
		return x.ChairNum
	}
	return 0
}

func (x *EnterGameTBCCResp) GetPlayer() *TbcowcowPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

//场景
type TbcowcowSceneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp  int64             `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`  //时间戳
	Chips      []int32           `protobuf:"varint,2,rep,packed,name=Chips,proto3" json:"Chips,omitempty"`   //筹码
	Inning     string            `protobuf:"bytes,3,opt,name=Inning,proto3" json:"Inning,omitempty"`         // 牌局号
	AllPlayers []*TbcowcowPlayer `protobuf:"bytes,4,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` //玩家列表信息
}

func (x *TbcowcowSceneResp) Reset() {
	*x = TbcowcowSceneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowSceneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowSceneResp) ProtoMessage() {}

func (x *TbcowcowSceneResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowSceneResp.ProtoReflect.Descriptor instead.
func (*TbcowcowSceneResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{2}
}

func (x *TbcowcowSceneResp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *TbcowcowSceneResp) GetChips() []int32 {
	if x != nil {
		return x.Chips
	}
	return nil
}

func (x *TbcowcowSceneResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

func (x *TbcowcowSceneResp) GetAllPlayers() []*TbcowcowPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

//状态
// 服务端推送
//(空闲 - )
type TbcowcowStateFreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	Inning string    `protobuf:"bytes,2,opt,name=Inning,proto3" json:"Inning,omitempty"` // 牌局号
}

func (x *TbcowcowStateFreeResp) Reset() {
	*x = TbcowcowStateFreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowStateFreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowStateFreeResp) ProtoMessage() {}

func (x *TbcowcowStateFreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowStateFreeResp.ProtoReflect.Descriptor instead.
func (*TbcowcowStateFreeResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{3}
}

func (x *TbcowcowStateFreeResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *TbcowcowStateFreeResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

//(游戏中 - 下注)
type TbcowcowStatePlayingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *TbcowcowStatePlayingResp) Reset() {
	*x = TbcowcowStatePlayingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowStatePlayingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowStatePlayingResp) ProtoMessage() {}

func (x *TbcowcowStatePlayingResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowStatePlayingResp.ProtoReflect.Descriptor instead.
func (*TbcowcowStatePlayingResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{4}
}

func (x *TbcowcowStatePlayingResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(发牌)
type TbcowcowStateDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *TbcowcowStateDealResp) Reset() {
	*x = TbcowcowStateDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowStateDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowStateDealResp) ProtoMessage() {}

func (x *TbcowcowStateDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowStateDealResp.ProtoReflect.Descriptor instead.
func (*TbcowcowStateDealResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{5}
}

func (x *TbcowcowStateDealResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(开奖 -- 比牌结果)
type TbcowcowStateOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times    *TimeInfo         `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	OpenInfo *TbcowcowOpenResp `protobuf:"bytes,2,opt,name=OpenInfo,proto3" json:"OpenInfo,omitempty"`
}

func (x *TbcowcowStateOpenResp) Reset() {
	*x = TbcowcowStateOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowStateOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowStateOpenResp) ProtoMessage() {}

func (x *TbcowcowStateOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowStateOpenResp.ProtoReflect.Descriptor instead.
func (*TbcowcowStateOpenResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{6}
}

func (x *TbcowcowStateOpenResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *TbcowcowStateOpenResp) GetOpenInfo() *TbcowcowOpenResp {
	if x != nil {
		return x.OpenInfo
	}
	return nil
}

//(结束)
type TbcowcowStateOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *TbcowcowStateOverResp) Reset() {
	*x = TbcowcowStateOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowStateOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowStateOverResp) ProtoMessage() {}

func (x *TbcowcowStateOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowStateOverResp.ProtoReflect.Descriptor instead.
func (*TbcowcowStateOverResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{7}
}

func (x *TbcowcowStateOverResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

///////////////
//////////有些玩家不配有牌////////
type TbcowcowDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cards  *CardInfo `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"` //只有开奖时有真实值
}

func (x *TbcowcowDealResp) Reset() {
	*x = TbcowcowDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowDealResp) ProtoMessage() {}

func (x *TbcowcowDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowDealResp.ProtoReflect.Descriptor instead.
func (*TbcowcowDealResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{8}
}

func (x *TbcowcowDealResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TbcowcowDealResp) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//////////////////////////////
//准备
type TbcowcowReadyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *TbcowcowReadyReq) Reset() {
	*x = TbcowcowReadyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowReadyReq) ProtoMessage() {}

func (x *TbcowcowReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowReadyReq.ProtoReflect.Descriptor instead.
func (*TbcowcowReadyReq) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{9}
}

func (x *TbcowcowReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type TbcowcowReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsReady bool   `protobuf:"varint,2,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *TbcowcowReadyResp) Reset() {
	*x = TbcowcowReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowReadyResp) ProtoMessage() {}

func (x *TbcowcowReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowReadyResp.ProtoReflect.Descriptor instead.
func (*TbcowcowReadyResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{10}
}

func (x *TbcowcowReadyResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TbcowcowReadyResp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

//下注
type TbcowcowBetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetArea  int32 `protobuf:"varint,1,opt,name=BetArea,proto3" json:"BetArea,omitempty"`   //下注区域
	BetScore int64 `protobuf:"varint,2,opt,name=BetScore,proto3" json:"BetScore,omitempty"` //下注金额
}

func (x *TbcowcowBetReq) Reset() {
	*x = TbcowcowBetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowBetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowBetReq) ProtoMessage() {}

func (x *TbcowcowBetReq) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowBetReq.ProtoReflect.Descriptor instead.
func (*TbcowcowBetReq) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{11}
}

func (x *TbcowcowBetReq) GetBetArea() int32 {
	if x != nil {
		return x.BetArea
	}
	return 0
}

func (x *TbcowcowBetReq) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

//下注结果：广播
type TbcowcowBetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	BetArea  int32  `protobuf:"varint,2,opt,name=BetArea,proto3" json:"BetArea,omitempty"`   //下注区域
	BetScore int64  `protobuf:"varint,3,opt,name=BetScore,proto3" json:"BetScore,omitempty"` //下注金额
}

func (x *TbcowcowBetResp) Reset() {
	*x = TbcowcowBetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowBetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowBetResp) ProtoMessage() {}

func (x *TbcowcowBetResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowBetResp.ProtoReflect.Descriptor instead.
func (*TbcowcowBetResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{12}
}

func (x *TbcowcowBetResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TbcowcowBetResp) GetBetArea() int32 {
	if x != nil {
		return x.BetArea
	}
	return 0
}

func (x *TbcowcowBetResp) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

//摊牌  // CardInfo Cards = 1;
type TbcowcowShowCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TbcowcowShowCardReq) Reset() {
	*x = TbcowcowShowCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowShowCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowShowCardReq) ProtoMessage() {}

func (x *TbcowcowShowCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowShowCardReq.ProtoReflect.Descriptor instead.
func (*TbcowcowShowCardReq) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{13}
}

type TbcowcowShowCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cards  *CardInfo `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`
}

func (x *TbcowcowShowCardResp) Reset() {
	*x = TbcowcowShowCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowShowCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowShowCardResp) ProtoMessage() {}

func (x *TbcowcowShowCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowShowCardResp.ProtoReflect.Descriptor instead.
func (*TbcowcowShowCardResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{14}
}

func (x *TbcowcowShowCardResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TbcowcowShowCardResp) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//开牌
type TbcowcowOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinnerID uint64            `protobuf:"varint,1,opt,name=WinnerID,proto3" json:"WinnerID,omitempty"` //赢家ID
	Infos    []*TbcowcowPlayer `protobuf:"bytes,2,rep,name=Infos,proto3" json:"Infos,omitempty"`        //玩家的牌值
}

func (x *TbcowcowOpenResp) Reset() {
	*x = TbcowcowOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowOpenResp) ProtoMessage() {}

func (x *TbcowcowOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowOpenResp.ProtoReflect.Descriptor instead.
func (*TbcowcowOpenResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{15}
}

func (x *TbcowcowOpenResp) GetWinnerID() uint64 {
	if x != nil {
		return x.WinnerID
	}
	return 0
}

func (x *TbcowcowOpenResp) GetInfos() []*TbcowcowPlayer {
	if x != nil {
		return x.Infos
	}
	return nil
}

//结算
type TbcowcowOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllPlayers []*TbcowcowPlayer `protobuf:"bytes,1,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` //统计：庄家+各区域输赢钱数额结算
}

func (x *TbcowcowOverResp) Reset() {
	*x = TbcowcowOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tbcowcow_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbcowcowOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbcowcowOverResp) ProtoMessage() {}

func (x *TbcowcowOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_tbcowcow_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbcowcowOverResp.ProtoReflect.Descriptor instead.
func (*TbcowcowOverResp) Descriptor() ([]byte, []int) {
	return file_tbcowcow_proto_rawDescGZIP(), []int{16}
}

func (x *TbcowcowOverResp) GetAllPlayers() []*TbcowcowPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

var File_tbcowcow_proto protoreflect.FileDescriptor

var file_tbcowcow_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x67, 0x6f, 0x1a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x47, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x47, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x73, 0x0a,
	0x11, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x42, 0x43, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68,
	0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x68,
	0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x62, 0x63, 0x6f,
	0x77, 0x63, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x68, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x62,
	0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x54, 0x62, 0x63, 0x6f,
	0x77, 0x63, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x3e, 0x0a,
	0x18, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x3b, 0x0a,
	0x15, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x15, 0x54, 0x62,
	0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x2e, 0x54,
	0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x15, 0x54, 0x62, 0x63,
	0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63,
	0x6f, 0x77, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63,
	0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x22, 0x45, 0x0a, 0x11, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x46, 0x0a, 0x0e, 0x54,
	0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x42,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77,
	0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x52, 0x0a, 0x14, 0x54,
	0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x58, 0x0a, 0x10, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x54, 0x62, 0x63,
	0x6f, 0x77, 0x63, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a,
	0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x62, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tbcowcow_proto_rawDescOnce sync.Once
	file_tbcowcow_proto_rawDescData = file_tbcowcow_proto_rawDesc
)

func file_tbcowcow_proto_rawDescGZIP() []byte {
	file_tbcowcow_proto_rawDescOnce.Do(func() {
		file_tbcowcow_proto_rawDescData = protoimpl.X.CompressGZIP(file_tbcowcow_proto_rawDescData)
	})
	return file_tbcowcow_proto_rawDescData
}

var file_tbcowcow_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tbcowcow_proto_goTypes = []interface{}{
	(*TbcowcowPlayer)(nil),           // 0: go.TbcowcowPlayer
	(*EnterGameTBCCResp)(nil),        // 1: go.EnterGameTBCCResp
	(*TbcowcowSceneResp)(nil),        // 2: go.TbcowcowSceneResp
	(*TbcowcowStateFreeResp)(nil),    // 3: go.TbcowcowStateFreeResp
	(*TbcowcowStatePlayingResp)(nil), // 4: go.TbcowcowStatePlayingResp
	(*TbcowcowStateDealResp)(nil),    // 5: go.TbcowcowStateDealResp
	(*TbcowcowStateOpenResp)(nil),    // 6: go.TbcowcowStateOpenResp
	(*TbcowcowStateOverResp)(nil),    // 7: go.TbcowcowStateOverResp
	(*TbcowcowDealResp)(nil),         // 8: go.TbcowcowDealResp
	(*TbcowcowReadyReq)(nil),         // 9: go.TbcowcowReadyReq
	(*TbcowcowReadyResp)(nil),        // 10: go.TbcowcowReadyResp
	(*TbcowcowBetReq)(nil),           // 11: go.TbcowcowBetReq
	(*TbcowcowBetResp)(nil),          // 12: go.TbcowcowBetResp
	(*TbcowcowShowCardReq)(nil),      // 13: go.TbcowcowShowCardReq
	(*TbcowcowShowCardResp)(nil),     // 14: go.TbcowcowShowCardResp
	(*TbcowcowOpenResp)(nil),         // 15: go.TbcowcowOpenResp
	(*TbcowcowOverResp)(nil),         // 16: go.TbcowcowOverResp
	(*PlayerInfo)(nil),               // 17: go.PlayerInfo
	(*CardInfo)(nil),                 // 18: go.CardInfo
	(*TimeInfo)(nil),                 // 19: go.TimeInfo
}
var file_tbcowcow_proto_depIdxs = []int32{
	17, // 0: go.TbcowcowPlayer.MyInfo:type_name -> go.PlayerInfo
	18, // 1: go.TbcowcowPlayer.Cards:type_name -> go.CardInfo
	0,  // 2: go.EnterGameTBCCResp.Player:type_name -> go.TbcowcowPlayer
	0,  // 3: go.TbcowcowSceneResp.AllPlayers:type_name -> go.TbcowcowPlayer
	19, // 4: go.TbcowcowStateFreeResp.Times:type_name -> go.TimeInfo
	19, // 5: go.TbcowcowStatePlayingResp.Times:type_name -> go.TimeInfo
	19, // 6: go.TbcowcowStateDealResp.Times:type_name -> go.TimeInfo
	19, // 7: go.TbcowcowStateOpenResp.Times:type_name -> go.TimeInfo
	15, // 8: go.TbcowcowStateOpenResp.OpenInfo:type_name -> go.TbcowcowOpenResp
	19, // 9: go.TbcowcowStateOverResp.Times:type_name -> go.TimeInfo
	18, // 10: go.TbcowcowDealResp.Cards:type_name -> go.CardInfo
	18, // 11: go.TbcowcowShowCardResp.Cards:type_name -> go.CardInfo
	0,  // 12: go.TbcowcowOpenResp.Infos:type_name -> go.TbcowcowPlayer
	0,  // 13: go.TbcowcowOverResp.AllPlayers:type_name -> go.TbcowcowPlayer
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_tbcowcow_proto_init() }
func file_tbcowcow_proto_init() {
	if File_tbcowcow_proto != nil {
		return
	}
	file_gamecomm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tbcowcow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterGameTBCCResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowSceneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowStateFreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowStatePlayingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowStateDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowStateOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowStateOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowReadyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowBetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowBetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowShowCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowShowCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tbcowcow_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbcowcowOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tbcowcow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tbcowcow_proto_goTypes,
		DependencyIndexes: file_tbcowcow_proto_depIdxs,
		MessageInfos:      file_tbcowcow_proto_msgTypes,
	}.Build()
	File_tbcowcow_proto = out.File
	file_tbcowcow_proto_rawDesc = nil
	file_tbcowcow_proto_goTypes = nil
	file_tbcowcow_proto_depIdxs = nil
}
