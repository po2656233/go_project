// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: gamecomm.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//该协议文件不提供 req 和 resp 注:如需使用,请在子游戏协议中嵌套相关协议.
type PlayerState int32

const (
	PlayerState_PlayerLookOn      PlayerState = 0  //旁观(可作为刚入场时的初始状态)
	PlayerState_PlayerSitDown     PlayerState = 1  //坐下(此状态下，才能参与游戏)
	PlayerState_PlayerAgree       PlayerState = 2  //同意(可作为准备状态)
	PlayerState_PlayerPlaying     PlayerState = 3  //游戏中
	PlayerState_PlayerPickUp      PlayerState = 4  //托管
	PlayerState_PlayerCall        PlayerState = 5  //叫分
	PlayerState_PlayerFollow      PlayerState = 6  //跟牌
	PlayerState_PlayerRaise       PlayerState = 7  //加注
	PlayerState_PlayerLook        PlayerState = 8  //看牌
	PlayerState_PlayerCompare     PlayerState = 9  //比牌
	PlayerState_PlayerCompareLose PlayerState = 10 //比牌失败
	PlayerState_PlayerOutCard     PlayerState = 11 //出牌|摊牌
	PlayerState_PlayerPass        PlayerState = 12 //过牌|要不起
	PlayerState_PlayerChi         PlayerState = 13 //吃
	PlayerState_PlayerPong        PlayerState = 14 //碰
	PlayerState_PlayerMingGang    PlayerState = 15 //明杠
	PlayerState_PlayerAnGang      PlayerState = 16 //暗杠
	PlayerState_PlayerTing        PlayerState = 17 //听
	PlayerState_PlayerHu          PlayerState = 18 //胡
	PlayerState_PlayerZiMo        PlayerState = 19 //自摸
	PlayerState_PlayerTrustee     PlayerState = 97 //托管
	PlayerState_PlayerGiveUp      PlayerState = 98 //弃牌
	PlayerState_PlayerStandUp     PlayerState = 99 //站起(可作为结束状态)
)

// Enum value maps for PlayerState.
var (
	PlayerState_name = map[int32]string{
		0:  "PlayerLookOn",
		1:  "PlayerSitDown",
		2:  "PlayerAgree",
		3:  "PlayerPlaying",
		4:  "PlayerPickUp",
		5:  "PlayerCall",
		6:  "PlayerFollow",
		7:  "PlayerRaise",
		8:  "PlayerLook",
		9:  "PlayerCompare",
		10: "PlayerCompareLose",
		11: "PlayerOutCard",
		12: "PlayerPass",
		13: "PlayerChi",
		14: "PlayerPong",
		15: "PlayerMingGang",
		16: "PlayerAnGang",
		17: "PlayerTing",
		18: "PlayerHu",
		19: "PlayerZiMo",
		97: "PlayerTrustee",
		98: "PlayerGiveUp",
		99: "PlayerStandUp",
	}
	PlayerState_value = map[string]int32{
		"PlayerLookOn":      0,
		"PlayerSitDown":     1,
		"PlayerAgree":       2,
		"PlayerPlaying":     3,
		"PlayerPickUp":      4,
		"PlayerCall":        5,
		"PlayerFollow":      6,
		"PlayerRaise":       7,
		"PlayerLook":        8,
		"PlayerCompare":     9,
		"PlayerCompareLose": 10,
		"PlayerOutCard":     11,
		"PlayerPass":        12,
		"PlayerChi":         13,
		"PlayerPong":        14,
		"PlayerMingGang":    15,
		"PlayerAnGang":      16,
		"PlayerTing":        17,
		"PlayerHu":          18,
		"PlayerZiMo":        19,
		"PlayerTrustee":     97,
		"PlayerGiveUp":      98,
		"PlayerStandUp":     99,
	}
)

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_gamecomm_proto_enumTypes[0].Descriptor()
}

func (PlayerState) Type() protoreflect.EnumType {
	return &file_gamecomm_proto_enumTypes[0]
}

func (x PlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerState.Descriptor instead.
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{0}
}

// 公告级别
type NTFLevel int32

const (
	//系统公告
	NTFLevel_GeneralNTF    NTFLevel = 0 //普通公告
	NTFLevel_UrgencyNTF    NTFLevel = 1 //紧急公告
	NTFLevel_NTMaintainNTF NTFLevel = 2 //维护公告
	NTFLevel_ServeStopNTF  NTFLevel = 3 //停服公告
	NTFLevel_PraiseNTF     NTFLevel = 4 //表扬公告
	//个人公告
	NTFLevel_STrumpetNTF NTFLevel = 5 // 小喇叭
	NTFLevel_MTrumpetNTF NTFLevel = 6 // 银喇叭
	NTFLevel_BTrumpetNTF NTFLevel = 7 // 金喇叭
)

// Enum value maps for NTFLevel.
var (
	NTFLevel_name = map[int32]string{
		0: "GeneralNTF",
		1: "UrgencyNTF",
		2: "NTMaintainNTF",
		3: "ServeStopNTF",
		4: "PraiseNTF",
		5: "STrumpetNTF",
		6: "MTrumpetNTF",
		7: "BTrumpetNTF",
	}
	NTFLevel_value = map[string]int32{
		"GeneralNTF":    0,
		"UrgencyNTF":    1,
		"NTMaintainNTF": 2,
		"ServeStopNTF":  3,
		"PraiseNTF":     4,
		"STrumpetNTF":   5,
		"MTrumpetNTF":   6,
		"BTrumpetNTF":   7,
	}
)

func (x NTFLevel) Enum() *NTFLevel {
	p := new(NTFLevel)
	*p = x
	return p
}

func (x NTFLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NTFLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_gamecomm_proto_enumTypes[1].Descriptor()
}

func (NTFLevel) Type() protoreflect.EnumType {
	return &file_gamecomm_proto_enumTypes[1]
}

func (x NTFLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NTFLevel.Descriptor instead.
func (NTFLevel) EnumDescriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{1}
}

// 方位
type Direct int32

const (
	Direct_Centre    Direct = 0
	Direct_EAST      Direct = 1
	Direct_South     Direct = 2
	Direct_West      Direct = 3
	Direct_North     Direct = 4
	Direct_EASTSouth Direct = 5
	Direct_WestSouth Direct = 6
	Direct_EASTNorth Direct = 7
	Direct_WestNorth Direct = 8
)

// Enum value maps for Direct.
var (
	Direct_name = map[int32]string{
		0: "Centre",
		1: "EAST",
		2: "South",
		3: "West",
		4: "North",
		5: "EASTSouth",
		6: "WestSouth",
		7: "EASTNorth",
		8: "WestNorth",
	}
	Direct_value = map[string]int32{
		"Centre":    0,
		"EAST":      1,
		"South":     2,
		"West":      3,
		"North":     4,
		"EASTSouth": 5,
		"WestSouth": 6,
		"EASTNorth": 7,
		"WestNorth": 8,
	}
)

func (x Direct) Enum() *Direct {
	p := new(Direct)
	*p = x
	return p
}

func (x Direct) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direct) Descriptor() protoreflect.EnumDescriptor {
	return file_gamecomm_proto_enumTypes[2].Descriptor()
}

func (Direct) Type() protoreflect.EnumType {
	return &file_gamecomm_proto_enumTypes[2]
}

func (x Direct) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direct.Descriptor instead.
func (Direct) EnumDescriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{2}
}

// 麻将操作
type MJOperate int32

const (
	MJOperate_NULL     MJOperate = 0  //用于校验
	MJOperate_Pass     MJOperate = 1  // 过牌
	MJOperate_Chi      MJOperate = 2  // 吃
	MJOperate_Pong     MJOperate = 3  // 碰
	MJOperate_Gang     MJOperate = 4  // 杠 自己手上三个,杠别家一个。和MingGang效果一样,显示不同
	MJOperate_MingGang MJOperate = 5  // 明杠(同杠)或碰后,抓牌起杠
	MJOperate_AnGang   MJOperate = 6  // 暗杠
	MJOperate_BuHua    MJOperate = 7  // 补花
	MJOperate_Ting     MJOperate = 8  // 听
	MJOperate_Hu       MJOperate = 9  // 胡牌
	MJOperate_ZiMo     MJOperate = 10 // 自摸
)

// Enum value maps for MJOperate.
var (
	MJOperate_name = map[int32]string{
		0:  "NULL",
		1:  "Pass",
		2:  "Chi",
		3:  "Pong",
		4:  "Gang",
		5:  "MingGang",
		6:  "AnGang",
		7:  "BuHua",
		8:  "Ting",
		9:  "Hu",
		10: "ZiMo",
	}
	MJOperate_value = map[string]int32{
		"NULL":     0,
		"Pass":     1,
		"Chi":      2,
		"Pong":     3,
		"Gang":     4,
		"MingGang": 5,
		"AnGang":   6,
		"BuHua":    7,
		"Ting":     8,
		"Hu":       9,
		"ZiMo":     10,
	}
)

func (x MJOperate) Enum() *MJOperate {
	p := new(MJOperate)
	*p = x
	return p
}

func (x MJOperate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MJOperate) Descriptor() protoreflect.EnumDescriptor {
	return file_gamecomm_proto_enumTypes[3].Descriptor()
}

func (MJOperate) Type() protoreflect.EnumType {
	return &file_gamecomm_proto_enumTypes[3]
}

func (x MJOperate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MJOperate.Descriptor instead.
func (MJOperate) EnumDescriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{3}
}

//跑胡子
type PHZOperate int32

const (
	PHZOperate_PHZ_NULL PHZOperate = 0 //用于校验
	PHZOperate_PHZ_Ti   PHZOperate = 1 // 提
	PHZOperate_PHZ_Wei  PHZOperate = 2 // 偎
	PHZOperate_PHZ_He   PHZOperate = 3 // 和
	PHZOperate_PHZ_Pao  PHZOperate = 4 // 跑
	PHZOperate_PHZ_Pong PHZOperate = 5 // 碰
	PHZOperate_PHZ_Chi  PHZOperate = 6 // 吃
)

// Enum value maps for PHZOperate.
var (
	PHZOperate_name = map[int32]string{
		0: "PHZ_NULL",
		1: "PHZ_Ti",
		2: "PHZ_Wei",
		3: "PHZ_He",
		4: "PHZ_Pao",
		5: "PHZ_Pong",
		6: "PHZ_Chi",
	}
	PHZOperate_value = map[string]int32{
		"PHZ_NULL": 0,
		"PHZ_Ti":   1,
		"PHZ_Wei":  2,
		"PHZ_He":   3,
		"PHZ_Pao":  4,
		"PHZ_Pong": 5,
		"PHZ_Chi":  6,
	}
)

func (x PHZOperate) Enum() *PHZOperate {
	p := new(PHZOperate)
	*p = x
	return p
}

func (x PHZOperate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PHZOperate) Descriptor() protoreflect.EnumDescriptor {
	return file_gamecomm_proto_enumTypes[4].Descriptor()
}

func (PHZOperate) Type() protoreflect.EnumType {
	return &file_gamecomm_proto_enumTypes[4]
}

func (x PHZOperate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PHZOperate.Descriptor instead.
func (PHZOperate) EnumDescriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{4}
}

//玩家信息
type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64      `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                    //ID
	Name       string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`                         //账号
	FaceID     uint32      `protobuf:"varint,3,opt,name=FaceID,proto3" json:"FaceID,omitempty"`                    //头像
	Age        uint32      `protobuf:"varint,4,opt,name=Age,proto3" json:"Age,omitempty"`                          //年龄
	Sex        uint32      `protobuf:"varint,5,opt,name=Sex,proto3" json:"Sex,omitempty"`                          //性别
	Gold       int64       `protobuf:"varint,6,opt,name=Gold,proto3" json:"Gold,omitempty"`                        //金币 *100
	Money      int64       `protobuf:"varint,7,opt,name=Money,proto3" json:"Money,omitempty"`                      //钱
	Level      uint32      `protobuf:"varint,8,opt,name=Level,proto3" json:"Level,omitempty"`                      //游戏级别
	Account    string      `protobuf:"bytes,9,opt,name=Account,proto3" json:"Account,omitempty"`                   // 账号(手机号码/邮箱/真名)
	State      PlayerState `protobuf:"varint,10,opt,name=State,proto3,enum=go.PlayerState" json:"State,omitempty"` // 状态
	PlatformID uint64      `protobuf:"varint,11,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`           // 平台ID 0:无效
	RoomID     uint64      `protobuf:"varint,12,opt,name=RoomID,proto3" json:"RoomID,omitempty"`                   // 房间号 0:无效
	GameID     uint64      `protobuf:"varint,13,opt,name=GameID,proto3" json:"GameID,omitempty"`                   // 所在游戏ID 0:无效
	TableID    uint32      `protobuf:"varint,14,opt,name=TableID,proto3" json:"TableID,omitempty"`                 // 所在桌号ID 0:不提供
	ChairID    uint32      `protobuf:"varint,15,opt,name=ChairID,proto3" json:"ChairID,omitempty"`                 // 所在椅子ID 0:不提供
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfo) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerInfo) GetFaceID() uint32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *PlayerInfo) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PlayerInfo) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PlayerInfo) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *PlayerInfo) GetMoney() int64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *PlayerInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PlayerInfo) GetState() PlayerState {
	if x != nil {
		return x.State
	}
	return PlayerState_PlayerLookOn
}

func (x *PlayerInfo) GetPlatformID() uint64 {
	if x != nil {
		return x.PlatformID
	}
	return 0
}

func (x *PlayerInfo) GetRoomID() uint64 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *PlayerInfo) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *PlayerInfo) GetTableID() uint32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *PlayerInfo) GetChairID() uint32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

//牌信息
type CardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards     []byte `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"`          //牌
	CardType  int32  `protobuf:"varint,2,opt,name=CardType,proto3" json:"CardType,omitempty"`   //牌型
	CardValue int32  `protobuf:"varint,3,opt,name=CardValue,proto3" json:"CardValue,omitempty"` //牌值
}

func (x *CardInfo) Reset() {
	*x = CardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardInfo) ProtoMessage() {}

func (x *CardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardInfo.ProtoReflect.Descriptor instead.
func (*CardInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{1}
}

func (x *CardInfo) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *CardInfo) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *CardInfo) GetCardValue() int32 {
	if x != nil {
		return x.CardValue
	}
	return 0
}

//时间信息
type TimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64 `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"` //时间戳（起始时间戳）
	WaitTime  int32 `protobuf:"varint,2,opt,name=WaitTime,proto3" json:"WaitTime,omitempty"`   //仍需等待时长
	OutTime   int32 `protobuf:"varint,3,opt,name=OutTime,proto3" json:"OutTime,omitempty"`     //服务器已过时长
	TotalTime int32 `protobuf:"varint,4,opt,name=TotalTime,proto3" json:"TotalTime,omitempty"` //总时长
}

func (x *TimeInfo) Reset() {
	*x = TimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeInfo) ProtoMessage() {}

func (x *TimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeInfo.ProtoReflect.Descriptor instead.
func (*TimeInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{2}
}

func (x *TimeInfo) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *TimeInfo) GetWaitTime() int32 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

func (x *TimeInfo) GetOutTime() int32 {
	if x != nil {
		return x.OutTime
	}
	return 0
}

func (x *TimeInfo) GetTotalTime() int32 {
	if x != nil {
		return x.TotalTime
	}
	return 0
}

//区域信息
type AreaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                   //区域ID
	MyGold      int64 `protobuf:"varint,2,opt,name=MyGold,proto3" json:"MyGold,omitempty"`           //my
	TotalGold   int64 `protobuf:"varint,3,opt,name=TotalGold,proto3" json:"TotalGold,omitempty"`     //总
	AcquireGold int64 `protobuf:"varint,4,opt,name=AcquireGold,proto3" json:"AcquireGold,omitempty"` //输赢情况
}

func (x *AreaInfo) Reset() {
	*x = AreaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfo) ProtoMessage() {}

func (x *AreaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfo.ProtoReflect.Descriptor instead.
func (*AreaInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{3}
}

func (x *AreaInfo) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AreaInfo) GetMyGold() int64 {
	if x != nil {
		return x.MyGold
	}
	return 0
}

func (x *AreaInfo) GetTotalGold() int64 {
	if x != nil {
		return x.TotalGold
	}
	return 0
}

func (x *AreaInfo) GetAcquireGold() int64 {
	if x != nil {
		return x.AcquireGold
	}
	return 0
}

//牌局信息
type InningInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`       //游戏ID
	Number    string `protobuf:"bytes,2,opt,name=Number,proto3" json:"Number,omitempty"`        //牌局编号
	Name      string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`            //游戏名称
	Payoff    int64  `protobuf:"varint,4,opt,name=Payoff,proto3" json:"Payoff,omitempty"`       //结算
	TimeStamp int64  `protobuf:"varint,5,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"` //时间戳
}

func (x *InningInfo) Reset() {
	*x = InningInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InningInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InningInfo) ProtoMessage() {}

func (x *InningInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InningInfo.ProtoReflect.Descriptor instead.
func (*InningInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{4}
}

func (x *InningInfo) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *InningInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *InningInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InningInfo) GetPayoff() int64 {
	if x != nil {
		return x.Payoff
	}
	return 0
}

func (x *InningInfo) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

//玩家列表(信息)
type PlayerListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllInfos []*PlayerInfo `protobuf:"bytes,1,rep,name=AllInfos,proto3" json:"AllInfos,omitempty"` //所有玩家信息
}

func (x *PlayerListInfo) Reset() {
	*x = PlayerListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerListInfo) ProtoMessage() {}

func (x *PlayerListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerListInfo.ProtoReflect.Descriptor instead.
func (*PlayerListInfo) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerListInfo) GetAllInfos() []*PlayerInfo {
	if x != nil {
		return x.AllInfos
	}
	return nil
}

//-----------------------------------------------------------------------------------------
//玩家记录（从数据库中获取）ResResult
type PlayerRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *PlayerInfo `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`          //玩家
	Twice    int32       `protobuf:"varint,2,opt,name=Twice,proto3" json:"Twice,omitempty"`       //游戏次数
	Ranking  int32       `protobuf:"varint,3,opt,name=Ranking,proto3" json:"Ranking,omitempty"`   //当前排名
	Bankroll int64       `protobuf:"varint,4,opt,name=Bankroll,proto3" json:"Bankroll,omitempty"` //投注额度
	WinLos   int64       `protobuf:"varint,5,opt,name=WinLos,proto3" json:"WinLos,omitempty"`     //总输赢 （当局）
}

func (x *PlayerRecord) Reset() {
	*x = PlayerRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRecord) ProtoMessage() {}

func (x *PlayerRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRecord.ProtoReflect.Descriptor instead.
func (*PlayerRecord) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerRecord) GetUser() *PlayerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PlayerRecord) GetTwice() int32 {
	if x != nil {
		return x.Twice
	}
	return 0
}

func (x *PlayerRecord) GetRanking() int32 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *PlayerRecord) GetBankroll() int64 {
	if x != nil {
		return x.Bankroll
	}
	return 0
}

func (x *PlayerRecord) GetWinLos() int64 {
	if x != nil {
		return x.WinLos
	}
	return 0
}

//游戏记录
type GameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardInfo *CardInfo `protobuf:"bytes,1,opt,name=CardInfo,proto3" json:"CardInfo,omitempty"`
	IsWon    bool      `protobuf:"varint,2,opt,name=IsWon,proto3" json:"IsWon,omitempty"` //输赢情况
}

func (x *GameRecord) Reset() {
	*x = GameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecord) ProtoMessage() {}

func (x *GameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecord.ProtoReflect.Descriptor instead.
func (*GameRecord) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{7}
}

func (x *GameRecord) GetCardInfo() *CardInfo {
	if x != nil {
		return x.CardInfo
	}
	return nil
}

func (x *GameRecord) GetIsWon() bool {
	if x != nil {
		return x.IsWon
	}
	return false
}

//历史记录(保存十二条记录)
type GameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GameRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //所有历史信息
}

func (x *GameRecordList) Reset() {
	*x = GameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecordList) ProtoMessage() {}

func (x *GameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecordList.ProtoReflect.Descriptor instead.
func (*GameRecordList) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{8}
}

func (x *GameRecordList) GetList() []*GameRecord {
	if x != nil {
		return x.List
	}
	return nil
}

//-----------------------------------------------------------------------------------------
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
//进入游戏
type EnterGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏 ID
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`  //房间密钥
	ChairNum uint32 `protobuf:"varint,3,opt,name=ChairNum,proto3" json:"ChairNum,omitempty"` //椅子编号(可选) 注: =0时,将由系统分配.
}

func (x *EnterGameReq) Reset() {
	*x = EnterGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameReq) ProtoMessage() {}

func (x *EnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameReq.ProtoReflect.Descriptor instead.
func (*EnterGameReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{9}
}

func (x *EnterGameReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *EnterGameReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EnterGameReq) GetChairNum() uint32 {
	if x != nil {
		return x.ChairNum
	}
	return 0
}

//入场协议  百人类
type EnterGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64      `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏标识
	ChairNum uint32      `protobuf:"varint,2,opt,name=ChairNum,proto3" json:"ChairNum,omitempty"` //椅子编号(不满足req的此项时,将由系统分配,并返回提示)
	UserInfo *PlayerInfo `protobuf:"bytes,3,opt,name=UserInfo,proto3" json:"UserInfo,omitempty"`  //玩家信息
}

func (x *EnterGameResp) Reset() {
	*x = EnterGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameResp) ProtoMessage() {}

func (x *EnterGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameResp.ProtoReflect.Descriptor instead.
func (*EnterGameResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{10}
}

func (x *EnterGameResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *EnterGameResp) GetChairNum() uint32 {
	if x != nil {
		return x.ChairNum
	}
	return 0
}

func (x *EnterGameResp) GetUserInfo() *PlayerInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//入场协议 对战类 [EnterXXXGameResp]
//受游戏本身特性影响,PlayerInfo有本地化需求
//请查看对应的子游戏协议文件 中的 EnterXXXGameResp
//若无本地化需求,统一走 EnterGameResp协议
//退出游戏
type ExitGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
}

func (x *ExitGameReq) Reset() {
	*x = ExitGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGameReq) ProtoMessage() {}

func (x *ExitGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGameReq.ProtoReflect.Descriptor instead.
func (*ExitGameReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{11}
}

func (x *ExitGameReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type ExitGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
	UserID uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ExitGameResp) Reset() {
	*x = ExitGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGameResp) ProtoMessage() {}

func (x *ExitGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGameResp.ProtoReflect.Descriptor instead.
func (*ExitGameResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{12}
}

func (x *ExitGameResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *ExitGameResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//解散游戏
type DisbandedGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
}

func (x *DisbandedGameReq) Reset() {
	*x = DisbandedGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandedGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandedGameReq) ProtoMessage() {}

func (x *DisbandedGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandedGameReq.ProtoReflect.Descriptor instead.
func (*DisbandedGameReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{13}
}

func (x *DisbandedGameReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type DisbandedGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
	UserID uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *DisbandedGameResp) Reset() {
	*x = DisbandedGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandedGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandedGameResp) ProtoMessage() {}

func (x *DisbandedGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandedGameResp.ProtoReflect.Descriptor instead.
func (*DisbandedGameResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{14}
}

func (x *DisbandedGameResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *DisbandedGameResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//换桌
type ChangeTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
}

func (x *ChangeTableReq) Reset() {
	*x = ChangeTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTableReq) ProtoMessage() {}

func (x *ChangeTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTableReq.ProtoReflect.Descriptor instead.
func (*ChangeTableReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeTableReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type ChangeTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏ID(新的,有别于req的此项)
	TableNum uint32 `protobuf:"varint,2,opt,name=TableNum,proto3" json:"TableNum,omitempty"` //桌子ID
	UserID   uint64 `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`     //玩家ID
}

func (x *ChangeTableResp) Reset() {
	*x = ChangeTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTableResp) ProtoMessage() {}

func (x *ChangeTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTableResp.ProtoReflect.Descriptor instead.
func (*ChangeTableResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeTableResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *ChangeTableResp) GetTableNum() uint32 {
	if x != nil {
		return x.TableNum
	}
	return 0
}

func (x *ChangeTableResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//找回游戏密码 [创建者|群主]权限
type GetBackPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
}

func (x *GetBackPasswordReq) Reset() {
	*x = GetBackPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackPasswordReq) ProtoMessage() {}

func (x *GetBackPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackPasswordReq.ProtoReflect.Descriptor instead.
func (*GetBackPasswordReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{17}
}

func (x *GetBackPasswordReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type GetBackPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`    //游戏标识
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"` //
}

func (x *GetBackPasswordResp) Reset() {
	*x = GetBackPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackPasswordResp) ProtoMessage() {}

func (x *GetBackPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackPasswordResp.ProtoReflect.Descriptor instead.
func (*GetBackPasswordResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{18}
}

func (x *GetBackPasswordResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *GetBackPasswordResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

/////////////玩家行为(与游戏弱相关的行为)/////////////////////
// 托管
type TrusteeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTrustee bool `protobuf:"varint,1,opt,name=IsTrustee,proto3" json:"IsTrustee,omitempty"` //是否托管
}

func (x *TrusteeReq) Reset() {
	*x = TrusteeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrusteeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrusteeReq) ProtoMessage() {}

func (x *TrusteeReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrusteeReq.ProtoReflect.Descriptor instead.
func (*TrusteeReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{19}
}

func (x *TrusteeReq) GetIsTrustee() bool {
	if x != nil {
		return x.IsTrustee
	}
	return false
}

type TrusteeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`       // 玩家ID
	IsTrustee bool   `protobuf:"varint,2,opt,name=IsTrustee,proto3" json:"IsTrustee,omitempty"` //是否托管
}

func (x *TrusteeResp) Reset() {
	*x = TrusteeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrusteeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrusteeResp) ProtoMessage() {}

func (x *TrusteeResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrusteeResp.ProtoReflect.Descriptor instead.
func (*TrusteeResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{20}
}

func (x *TrusteeResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TrusteeResp) GetIsTrustee() bool {
	if x != nil {
		return x.IsTrustee
	}
	return false
}

//扔骰子
type RollDiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiceCount int32 `protobuf:"varint,1,opt,name=DiceCount,proto3" json:"DiceCount,omitempty"` //骰子的个数
}

func (x *RollDiceReq) Reset() {
	*x = RollDiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollDiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDiceReq) ProtoMessage() {}

func (x *RollDiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDiceReq.ProtoReflect.Descriptor instead.
func (*RollDiceReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{21}
}

func (x *RollDiceReq) GetDiceCount() int32 {
	if x != nil {
		return x.DiceCount
	}
	return 0
}

type RollDiceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	DiceCount int32  `protobuf:"varint,2,opt,name=DiceCount,proto3" json:"DiceCount,omitempty"` //骰子的个数
	Dice      []byte `protobuf:"bytes,3,opt,name=Dice,proto3" json:"Dice,omitempty"`            //骰子具体个数,起抓牌位置
}

func (x *RollDiceResp) Reset() {
	*x = RollDiceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollDiceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDiceResp) ProtoMessage() {}

func (x *RollDiceResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDiceResp.ProtoReflect.Descriptor instead.
func (*RollDiceResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{22}
}

func (x *RollDiceResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RollDiceResp) GetDiceCount() int32 {
	if x != nil {
		return x.DiceCount
	}
	return 0
}

func (x *RollDiceResp) GetDice() []byte {
	if x != nil {
		return x.Dice
	}
	return nil
}

///////////////////金币变化///////////////////////////////
//更新金币
type UpdateGoldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGoldReq) Reset() {
	*x = UpdateGoldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoldReq) ProtoMessage() {}

func (x *UpdateGoldReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoldReq.ProtoReflect.Descriptor instead.
func (*UpdateGoldReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{23}
}

type UpdateGoldResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Gold   int64  `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"` //当前玩家金币
}

func (x *UpdateGoldResp) Reset() {
	*x = UpdateGoldResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoldResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoldResp) ProtoMessage() {}

func (x *UpdateGoldResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoldResp.ProtoReflect.Descriptor instead.
func (*UpdateGoldResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateGoldResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateGoldResp) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

///////////////////游戏记录///////////////////////////////
//获取牌局记录 注: 房主权限
type GetInningsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识 =0时,表示所有参与过的游戏
}

func (x *GetInningsInfoReq) Reset() {
	*x = GetInningsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInningsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInningsInfoReq) ProtoMessage() {}

func (x *GetInningsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInningsInfoReq.ProtoReflect.Descriptor instead.
func (*GetInningsInfoReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{25}
}

func (x *GetInningsInfoReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type GetInningsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  uint64        `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`   //游戏标识 =0时,表示所有参与过的游戏
	Innings []*InningInfo `protobuf:"bytes,2,rep,name=Innings,proto3" json:"Innings,omitempty"`  //牌局信息
	PageNum int32         `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"` //页码 默认20条一页
}

func (x *GetInningsInfoResp) Reset() {
	*x = GetInningsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInningsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInningsInfoResp) ProtoMessage() {}

func (x *GetInningsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInningsInfoResp.ProtoReflect.Descriptor instead.
func (*GetInningsInfoResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{26}
}

func (x *GetInningsInfoResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *GetInningsInfoResp) GetInnings() []*InningInfo {
	if x != nil {
		return x.Innings
	}
	return nil
}

func (x *GetInningsInfoResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

//获取游戏记录(根据kindID)
type GetRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KindID         uint64 `protobuf:"varint,1,opt,name=KindID,proto3" json:"KindID,omitempty"`                 //游戏标识 =0时,表示所有参与过的游戏
	Level          uint32 `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`                   //游戏类别 0:普通 1:中级 2:高级 3:积分排位 4:淘汰制排位 -1:表示不分级别统计
	StartTimeStamp int64  `protobuf:"varint,3,opt,name=StartTimeStamp,proto3" json:"StartTimeStamp,omitempty"` //起始时间戳 = 0默认所有
	EndTimeStamp   int64  `protobuf:"varint,4,opt,name=EndTimeStamp,proto3" json:"EndTimeStamp,omitempty"`     //结束时间戳 = 0
}

func (x *GetRecordReq) Reset() {
	*x = GetRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordReq) ProtoMessage() {}

func (x *GetRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordReq.ProtoReflect.Descriptor instead.
func (*GetRecordReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{27}
}

func (x *GetRecordReq) GetKindID() uint64 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *GetRecordReq) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetRecordReq) GetStartTimeStamp() int64 {
	if x != nil {
		return x.StartTimeStamp
	}
	return 0
}

func (x *GetRecordReq) GetEndTimeStamp() int64 {
	if x != nil {
		return x.EndTimeStamp
	}
	return 0
}

type GetRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KindID         uint64        `protobuf:"varint,1,opt,name=KindID,proto3" json:"KindID,omitempty"` //游戏标识 =0时,表示所有参与过的游戏
	Level          uint32        `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`   // -1:表示不分级别统计
	StartTimeStamp int64         `protobuf:"varint,3,opt,name=StartTimeStamp,proto3" json:"StartTimeStamp,omitempty"`
	EndTimeStamp   int64         `protobuf:"varint,4,opt,name=EndTimeStamp,proto3" json:"EndTimeStamp,omitempty"`
	Innings        []*InningInfo `protobuf:"bytes,5,rep,name=Innings,proto3" json:"Innings,omitempty"`  //牌局信息
	PageNum        int32         `protobuf:"varint,6,opt,name=PageNum,proto3" json:"PageNum,omitempty"` //页码 默认20条一页
}

func (x *GetRecordResp) Reset() {
	*x = GetRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordResp) ProtoMessage() {}

func (x *GetRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordResp.ProtoReflect.Descriptor instead.
func (*GetRecordResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{28}
}

func (x *GetRecordResp) GetKindID() uint64 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *GetRecordResp) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetRecordResp) GetStartTimeStamp() int64 {
	if x != nil {
		return x.StartTimeStamp
	}
	return 0
}

func (x *GetRecordResp) GetEndTimeStamp() int64 {
	if x != nil {
		return x.EndTimeStamp
	}
	return 0
}

func (x *GetRecordResp) GetInnings() []*InningInfo {
	if x != nil {
		return x.Innings
	}
	return nil
}

func (x *GetRecordResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

//请求游戏结束（注:返回牌局记录后,游戏随即销毁）
type GameOverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID uint64 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"` //注:不能为0
}

func (x *GameOverReq) Reset() {
	*x = GameOverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverReq) ProtoMessage() {}

func (x *GameOverReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverReq.ProtoReflect.Descriptor instead.
func (*GameOverReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{29}
}

func (x *GameOverReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type GameOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  uint64        `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`   //注:不能为0
	Innings []*InningInfo `protobuf:"bytes,2,rep,name=Innings,proto3" json:"Innings,omitempty"`  //牌局信息
	PageNum int32         `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"` //页码 默认20条一页;
}

func (x *GameOverResp) Reset() {
	*x = GameOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverResp) ProtoMessage() {}

func (x *GameOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverResp.ProtoReflect.Descriptor instead.
func (*GameOverResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{30}
}

func (x *GameOverResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *GameOverResp) GetInnings() []*InningInfo {
	if x != nil {
		return x.Innings
	}
	return nil
}

func (x *GameOverResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

////////////////////notify/////////////////////////////
//踢出
type NotifyBeOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` //玩家ID
	GameID uint64 `protobuf:"varint,2,opt,name=GameID,proto3" json:"GameID,omitempty"` //游戏标识
	Code   uint32 `protobuf:"varint,3,opt,name=Code,proto3" json:"Code,omitempty"`     //操作码 0:时间到被剔除 1:刷子
	Hints  string `protobuf:"bytes,4,opt,name=Hints,proto3" json:"Hints,omitempty"`    //被踢出的原因
}

func (x *NotifyBeOut) Reset() {
	*x = NotifyBeOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyBeOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyBeOut) ProtoMessage() {}

func (x *NotifyBeOut) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyBeOut.ProtoReflect.Descriptor instead.
func (*NotifyBeOut) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{31}
}

func (x *NotifyBeOut) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *NotifyBeOut) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *NotifyBeOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NotifyBeOut) GetHints() string {
	if x != nil {
		return x.Hints
	}
	return ""
}

//金币变化通知
type NotifyGoldChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Gold      int64  `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"`           //金币 (客户端统一 */100)
	AlterGold int64  `protobuf:"varint,3,opt,name=AlterGold,proto3" json:"AlterGold,omitempty"` //增减了多少 (客户端统一 */100)
	Code      uint32 `protobuf:"varint,4,opt,name=Code,proto3" json:"Code,omitempty"`           //操作原因 0:结算 1:充值 2:平台扣除 3:平台奖励 4:冻结 5:提币
	Reason    string `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason,omitempty"`        //备注详情
}

func (x *NotifyGoldChange) Reset() {
	*x = NotifyGoldChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGoldChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGoldChange) ProtoMessage() {}

func (x *NotifyGoldChange) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGoldChange.ProtoReflect.Descriptor instead.
func (*NotifyGoldChange) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{32}
}

func (x *NotifyGoldChange) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *NotifyGoldChange) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *NotifyGoldChange) GetAlterGold() int64 {
	if x != nil {
		return x.AlterGold
	}
	return 0
}

func (x *NotifyGoldChange) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NotifyGoldChange) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

//公告
type NotifyNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  uint64   `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`                //游戏标识 =0大厅
	Title   string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`                   //标题
	Content string   `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`               //内容
	Level   NTFLevel `protobuf:"varint,4,opt,name=Level,proto3,enum=go.NTFLevel" json:"Level,omitempty"` //个人只能发送 喇叭
	Timeout int32    `protobuf:"varint,5,opt,name=Timeout,proto3" json:"Timeout,omitempty"`              //总时长 0<= 默认一分钟
}

func (x *NotifyNoticeReq) Reset() {
	*x = NotifyNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNoticeReq) ProtoMessage() {}

func (x *NotifyNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNoticeReq.ProtoReflect.Descriptor instead.
func (*NotifyNoticeReq) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{33}
}

func (x *NotifyNoticeReq) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *NotifyNoticeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotifyNoticeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifyNoticeReq) GetLevel() NTFLevel {
	if x != nil {
		return x.Level
	}
	return NTFLevel_GeneralNTF
}

func (x *NotifyNoticeReq) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type NotifyNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                //玩家ID =0时为所有玩家
	GameID   uint64    `protobuf:"varint,2,opt,name=GameID,proto3" json:"GameID,omitempty"`                //游戏标识 =0大厅
	Level    NTFLevel  `protobuf:"varint,3,opt,name=Level,proto3,enum=go.NTFLevel" json:"Level,omitempty"` //公告级别
	TimeInfo *TimeInfo `protobuf:"bytes,4,opt,name=TimeInfo,proto3" json:"TimeInfo,omitempty"`             //时间
	Title    string    `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`                   //标题
	Content  string    `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`               //内容
}

func (x *NotifyNoticeResp) Reset() {
	*x = NotifyNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamecomm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNoticeResp) ProtoMessage() {}

func (x *NotifyNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_gamecomm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNoticeResp.ProtoReflect.Descriptor instead.
func (*NotifyNoticeResp) Descriptor() ([]byte, []int) {
	return file_gamecomm_proto_rawDescGZIP(), []int{34}
}

func (x *NotifyNoticeResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *NotifyNoticeResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *NotifyNoticeResp) GetLevel() NTFLevel {
	if x != nil {
		return x.Level
	}
	return NTFLevel_GeneralNTF
}

func (x *NotifyNoticeResp) GetTimeInfo() *TimeInfo {
	if x != nil {
		return x.TimeInfo
	}
	return nil
}

func (x *NotifyNoticeResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotifyNoticeResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_gamecomm_proto protoreflect.FileDescriptor

var file_gamecomm_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x67, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x47,
	0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x72, 0x49,
	0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x72, 0x49, 0x44,
	0x22, 0x5a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x08,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x79, 0x47, 0x6f, 0x6c, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x79, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x86,
	0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x66, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3c, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x41, 0x6c, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x41, 0x6c, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x77,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x77, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61,
	0x6e, 0x6b, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x61,
	0x6e, 0x6b, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x22, 0x4c,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x08,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x57, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x57, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x5e, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e,
	0x75, 0x6d, 0x22, 0x6f, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43,
	0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x0b, 0x45, 0x78, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0c, 0x45, 0x78,
	0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x69,
	0x73, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e,
	0x64, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2a, 0x0a,
	0x0a, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x65, 0x22, 0x2b,
	0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x44, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x44, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x0c, 0x52,
	0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x69, 0x63, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x22, 0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x47, 0x6f, 0x6c, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x22, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x07, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4b, 0x69, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4b, 0x69, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xcd,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x4b, 0x69, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x4b, 0x69, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x07, 0x49, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f,
	0x2e, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x49, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x25,
	0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x07, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x22, 0x67, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x65, 0x4f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x4e, 0x54, 0x46, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22,
	0xc0, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x4e, 0x54, 0x46, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2a, 0xa3, 0x03, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b,
	0x4f, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x06, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x69, 0x73, 0x65, 0x10, 0x07,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x10, 0x08,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x73, 0x65, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x0b, 0x12, 0x0e, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x10, 0x0c, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x69, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x6e, 0x67, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x10, 0x0f,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6e, 0x47, 0x61, 0x6e, 0x67,
	0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x67,
	0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x75, 0x10, 0x12,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5a, 0x69, 0x4d, 0x6f, 0x10, 0x13,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x65, 0x10, 0x61, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x69, 0x76,
	0x65, 0x55, 0x70, 0x10, 0x62, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x10, 0x63, 0x2a, 0x91, 0x01, 0x0a, 0x08, 0x4e, 0x54, 0x46,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x4e, 0x54, 0x46, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x4e, 0x54, 0x46, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x54, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x4e, 0x54, 0x46, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x54, 0x46, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x4e, 0x54, 0x46, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x72,
	0x75, 0x6d, 0x70, 0x65, 0x74, 0x4e, 0x54, 0x46, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x54,
	0x72, 0x75, 0x6d, 0x70, 0x65, 0x74, 0x4e, 0x54, 0x46, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x42,
	0x54, 0x72, 0x75, 0x6d, 0x70, 0x65, 0x74, 0x4e, 0x54, 0x46, 0x10, 0x07, 0x2a, 0x7a, 0x0a, 0x06,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x41, 0x53, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x6f, 0x75, 0x74, 0x68, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x65, 0x73, 0x74, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x41, 0x53, 0x54, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x57,
	0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x41,
	0x53, 0x54, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x10, 0x08, 0x2a, 0x7d, 0x0a, 0x09, 0x4d, 0x4a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x68, 0x69,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x47, 0x61, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x67, 0x47, 0x61,
	0x6e, 0x67, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x10, 0x06,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x75, 0x48, 0x75, 0x61, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x69, 0x6e, 0x67, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x75, 0x10, 0x09, 0x12, 0x08, 0x0a,
	0x04, 0x5a, 0x69, 0x4d, 0x6f, 0x10, 0x0a, 0x2a, 0x67, 0x0a, 0x0a, 0x50, 0x48, 0x5a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x48, 0x5a, 0x5f, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x48, 0x5a, 0x5f, 0x54, 0x69, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x48, 0x5a, 0x5f, 0x57, 0x65, 0x69, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x48, 0x5a, 0x5f, 0x48, 0x65, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x48, 0x5a, 0x5f,
	0x50, 0x61, 0x6f, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x48, 0x5a, 0x5f, 0x50, 0x6f, 0x6e,
	0x67, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x48, 0x5a, 0x5f, 0x43, 0x68, 0x69, 0x10, 0x06,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamecomm_proto_rawDescOnce sync.Once
	file_gamecomm_proto_rawDescData = file_gamecomm_proto_rawDesc
)

func file_gamecomm_proto_rawDescGZIP() []byte {
	file_gamecomm_proto_rawDescOnce.Do(func() {
		file_gamecomm_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamecomm_proto_rawDescData)
	})
	return file_gamecomm_proto_rawDescData
}

var file_gamecomm_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_gamecomm_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_gamecomm_proto_goTypes = []interface{}{
	(PlayerState)(0),            // 0: go.PlayerState
	(NTFLevel)(0),               // 1: go.NTFLevel
	(Direct)(0),                 // 2: go.Direct
	(MJOperate)(0),              // 3: go.MJOperate
	(PHZOperate)(0),             // 4: go.PHZOperate
	(*PlayerInfo)(nil),          // 5: go.PlayerInfo
	(*CardInfo)(nil),            // 6: go.CardInfo
	(*TimeInfo)(nil),            // 7: go.TimeInfo
	(*AreaInfo)(nil),            // 8: go.AreaInfo
	(*InningInfo)(nil),          // 9: go.InningInfo
	(*PlayerListInfo)(nil),      // 10: go.PlayerListInfo
	(*PlayerRecord)(nil),        // 11: go.PlayerRecord
	(*GameRecord)(nil),          // 12: go.GameRecord
	(*GameRecordList)(nil),      // 13: go.GameRecordList
	(*EnterGameReq)(nil),        // 14: go.EnterGameReq
	(*EnterGameResp)(nil),       // 15: go.EnterGameResp
	(*ExitGameReq)(nil),         // 16: go.ExitGameReq
	(*ExitGameResp)(nil),        // 17: go.ExitGameResp
	(*DisbandedGameReq)(nil),    // 18: go.DisbandedGameReq
	(*DisbandedGameResp)(nil),   // 19: go.DisbandedGameResp
	(*ChangeTableReq)(nil),      // 20: go.ChangeTableReq
	(*ChangeTableResp)(nil),     // 21: go.ChangeTableResp
	(*GetBackPasswordReq)(nil),  // 22: go.GetBackPasswordReq
	(*GetBackPasswordResp)(nil), // 23: go.GetBackPasswordResp
	(*TrusteeReq)(nil),          // 24: go.TrusteeReq
	(*TrusteeResp)(nil),         // 25: go.TrusteeResp
	(*RollDiceReq)(nil),         // 26: go.RollDiceReq
	(*RollDiceResp)(nil),        // 27: go.RollDiceResp
	(*UpdateGoldReq)(nil),       // 28: go.UpdateGoldReq
	(*UpdateGoldResp)(nil),      // 29: go.UpdateGoldResp
	(*GetInningsInfoReq)(nil),   // 30: go.GetInningsInfoReq
	(*GetInningsInfoResp)(nil),  // 31: go.GetInningsInfoResp
	(*GetRecordReq)(nil),        // 32: go.GetRecordReq
	(*GetRecordResp)(nil),       // 33: go.GetRecordResp
	(*GameOverReq)(nil),         // 34: go.GameOverReq
	(*GameOverResp)(nil),        // 35: go.GameOverResp
	(*NotifyBeOut)(nil),         // 36: go.NotifyBeOut
	(*NotifyGoldChange)(nil),    // 37: go.NotifyGoldChange
	(*NotifyNoticeReq)(nil),     // 38: go.NotifyNoticeReq
	(*NotifyNoticeResp)(nil),    // 39: go.NotifyNoticeResp
}
var file_gamecomm_proto_depIdxs = []int32{
	0,  // 0: go.PlayerInfo.State:type_name -> go.PlayerState
	5,  // 1: go.PlayerListInfo.AllInfos:type_name -> go.PlayerInfo
	5,  // 2: go.PlayerRecord.User:type_name -> go.PlayerInfo
	6,  // 3: go.GameRecord.CardInfo:type_name -> go.CardInfo
	12, // 4: go.GameRecordList.list:type_name -> go.GameRecord
	5,  // 5: go.EnterGameResp.UserInfo:type_name -> go.PlayerInfo
	9,  // 6: go.GetInningsInfoResp.Innings:type_name -> go.InningInfo
	9,  // 7: go.GetRecordResp.Innings:type_name -> go.InningInfo
	9,  // 8: go.GameOverResp.Innings:type_name -> go.InningInfo
	1,  // 9: go.NotifyNoticeReq.Level:type_name -> go.NTFLevel
	1,  // 10: go.NotifyNoticeResp.Level:type_name -> go.NTFLevel
	7,  // 11: go.NotifyNoticeResp.TimeInfo:type_name -> go.TimeInfo
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_gamecomm_proto_init() }
func file_gamecomm_proto_init() {
	if File_gamecomm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gamecomm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InningInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandedGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandedGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrusteeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrusteeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollDiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollDiceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoldResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInningsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInningsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyBeOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGoldChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamecomm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamecomm_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gamecomm_proto_goTypes,
		DependencyIndexes: file_gamecomm_proto_depIdxs,
		EnumInfos:         file_gamecomm_proto_enumTypes,
		MessageInfos:      file_gamecomm_proto_msgTypes,
	}.Build()
	File_gamecomm_proto = out.File
	file_gamecomm_proto_rawDesc = nil
	file_gamecomm_proto_goTypes = nil
	file_gamecomm_proto_depIdxs = nil
}
