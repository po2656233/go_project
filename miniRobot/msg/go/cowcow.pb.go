// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: cowcow.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//【百人类游戏】
//入场 (场景)
type GameCowcowEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo   *PlayerInfo `protobuf:"bytes,1,opt,name=UserInfo,proto3" json:"UserInfo,omitempty"`     //玩家个人信息
	TimeStamp  int64       `protobuf:"varint,2,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`  //时间戳
	Chips      []int32     `protobuf:"varint,3,rep,packed,name=Chips,proto3" json:"Chips,omitempty"`   //筹码
	AwardAreas [][]byte    `protobuf:"bytes,4,rep,name=AwardAreas,proto3" json:"AwardAreas,omitempty"` //开奖记录(路单)
	FreeTime   uint32      `protobuf:"varint,5,opt,name=FreeTime,proto3" json:"FreeTime,omitempty"`
	BetTime    uint32      `protobuf:"varint,6,opt,name=BetTime,proto3" json:"BetTime,omitempty"`
	OpenTime   uint32      `protobuf:"varint,7,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
}

func (x *GameCowcowEnter) Reset() {
	*x = GameCowcowEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowEnter) ProtoMessage() {}

func (x *GameCowcowEnter) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowEnter.ProtoReflect.Descriptor instead.
func (*GameCowcowEnter) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{0}
}

func (x *GameCowcowEnter) GetUserInfo() *PlayerInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GameCowcowEnter) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *GameCowcowEnter) GetChips() []int32 {
	if x != nil {
		return x.Chips
	}
	return nil
}

func (x *GameCowcowEnter) GetAwardAreas() [][]byte {
	if x != nil {
		return x.AwardAreas
	}
	return nil
}

func (x *GameCowcowEnter) GetFreeTime() uint32 {
	if x != nil {
		return x.FreeTime
	}
	return 0
}

func (x *GameCowcowEnter) GetBetTime() uint32 {
	if x != nil {
		return x.BetTime
	}
	return 0
}

func (x *GameCowcowEnter) GetOpenTime() uint32 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

//注:通过mainID->subID 区分游戏状态(subID:101空闲、102游戏、103开奖、104旁观)
//游戏消息
//抢庄
type GameCowcowHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsWant bool   `protobuf:"varint,2,opt,name=IsWant,proto3" json:"IsWant,omitempty"` //true上庄 false取消上庄
}

func (x *GameCowcowHost) Reset() {
	*x = GameCowcowHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowHost) ProtoMessage() {}

func (x *GameCowcowHost) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowHost.ProtoReflect.Descriptor instead.
func (*GameCowcowHost) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{1}
}

func (x *GameCowcowHost) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GameCowcowHost) GetIsWant() bool {
	if x != nil {
		return x.IsWant
	}
	return false
}

//超级抢庄
type GameCowcowSuperHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsWant bool   `protobuf:"varint,2,opt,name=IsWant,proto3" json:"IsWant,omitempty"` //true上庄 false取消
}

func (x *GameCowcowSuperHost) Reset() {
	*x = GameCowcowSuperHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowSuperHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowSuperHost) ProtoMessage() {}

func (x *GameCowcowSuperHost) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowSuperHost.ProtoReflect.Descriptor instead.
func (*GameCowcowSuperHost) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{2}
}

func (x *GameCowcowSuperHost) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GameCowcowSuperHost) GetIsWant() bool {
	if x != nil {
		return x.IsWant
	}
	return false
}

//游戏中
type GameCowcowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetArea  int32 `protobuf:"varint,1,opt,name=BetArea,proto3" json:"BetArea,omitempty"`   //下注区域
	BetScore int64 `protobuf:"varint,2,opt,name=BetScore,proto3" json:"BetScore,omitempty"` //下注金额
}

func (x *GameCowcowReq) Reset() {
	*x = GameCowcowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowReq) ProtoMessage() {}

func (x *GameCowcowReq) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowReq.ProtoReflect.Descriptor instead.
func (*GameCowcowReq) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{3}
}

func (x *GameCowcowReq) GetBetArea() int32 {
	if x != nil {
		return x.BetArea
	}
	return 0
}

func (x *GameCowcowReq) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

//下注结果
type GameCowcowBetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32  `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"` //状态
	Hints string `protobuf:"bytes,2,opt,name=Hints,proto3" json:"Hints,omitempty"`  //提示
}

func (x *GameCowcowBetResp) Reset() {
	*x = GameCowcowBetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowBetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowBetResp) ProtoMessage() {}

func (x *GameCowcowBetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowBetResp.ProtoReflect.Descriptor instead.
func (*GameCowcowBetResp) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{4}
}

func (x *GameCowcowBetResp) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GameCowcowBetResp) GetHints() string {
	if x != nil {
		return x.Hints
	}
	return ""
}

//结束
type GameCowcowOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardArea  []byte    `protobuf:"bytes,1,opt,name=AwardArea,proto3" json:"AwardArea,omitempty"`   //开奖区域
	BankerCard *CardInfo `protobuf:"bytes,2,opt,name=BankerCard,proto3" json:"BankerCard,omitempty"` //庄家
	TianCard   *CardInfo `protobuf:"bytes,3,opt,name=TianCard,proto3" json:"TianCard,omitempty"`     //天
	XuanCard   *CardInfo `protobuf:"bytes,4,opt,name=XuanCard,proto3" json:"XuanCard,omitempty"`     //玄
	DiCard     *CardInfo `protobuf:"bytes,5,opt,name=DiCard,proto3" json:"DiCard,omitempty"`         //地
	HuangCard  *CardInfo `protobuf:"bytes,6,opt,name=HuangCard,proto3" json:"HuangCard,omitempty"`   //黄
}

func (x *GameCowcowOver) Reset() {
	*x = GameCowcowOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowOver) ProtoMessage() {}

func (x *GameCowcowOver) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowOver.ProtoReflect.Descriptor instead.
func (*GameCowcowOver) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{5}
}

func (x *GameCowcowOver) GetAwardArea() []byte {
	if x != nil {
		return x.AwardArea
	}
	return nil
}

func (x *GameCowcowOver) GetBankerCard() *CardInfo {
	if x != nil {
		return x.BankerCard
	}
	return nil
}

func (x *GameCowcowOver) GetTianCard() *CardInfo {
	if x != nil {
		return x.TianCard
	}
	return nil
}

func (x *GameCowcowOver) GetXuanCard() *CardInfo {
	if x != nil {
		return x.XuanCard
	}
	return nil
}

func (x *GameCowcowOver) GetDiCard() *CardInfo {
	if x != nil {
		return x.DiCard
	}
	return nil
}

func (x *GameCowcowOver) GetHuangCard() *CardInfo {
	if x != nil {
		return x.HuangCard
	}
	return nil
}

//结算
type GameCowcowCheckout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acquire int64 `protobuf:"varint,1,opt,name=Acquire,proto3" json:"Acquire,omitempty"` //获得金币(结算)
}

func (x *GameCowcowCheckout) Reset() {
	*x = GameCowcowCheckout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cowcow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCowcowCheckout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCowcowCheckout) ProtoMessage() {}

func (x *GameCowcowCheckout) ProtoReflect() protoreflect.Message {
	mi := &file_cowcow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCowcowCheckout.ProtoReflect.Descriptor instead.
func (*GameCowcowCheckout) Descriptor() ([]byte, []int) {
	return file_cowcow_proto_rawDescGZIP(), []int{6}
}

func (x *GameCowcowCheckout) GetAcquire() int64 {
	if x != nil {
		return x.Acquire
	}
	return 0
}

var File_cowcow_proto protoreflect.FileDescriptor

var file_cowcow_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x67, 0x6f, 0x1a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x77, 0x63, 0x6f,
	0x77, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x43, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x53, 0x75, 0x70, 0x65, 0x72, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x57,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x57, 0x61, 0x6e,
	0x74, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x0e, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2c, 0x0a, 0x0a, 0x42, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x42, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x54, 0x69, 0x61, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x69, 0x61, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x58, 0x75, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x58, 0x75, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x06,
	0x44, 0x69, 0x43, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x44, 0x69, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x22, 0x2e,
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x77, 0x63, 0x6f, 0x77, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cowcow_proto_rawDescOnce sync.Once
	file_cowcow_proto_rawDescData = file_cowcow_proto_rawDesc
)

func file_cowcow_proto_rawDescGZIP() []byte {
	file_cowcow_proto_rawDescOnce.Do(func() {
		file_cowcow_proto_rawDescData = protoimpl.X.CompressGZIP(file_cowcow_proto_rawDescData)
	})
	return file_cowcow_proto_rawDescData
}

var file_cowcow_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cowcow_proto_goTypes = []interface{}{
	(*GameCowcowEnter)(nil),     // 0: go.GameCowcowEnter
	(*GameCowcowHost)(nil),      // 1: go.GameCowcowHost
	(*GameCowcowSuperHost)(nil), // 2: go.GameCowcowSuperHost
	(*GameCowcowReq)(nil),       // 3: go.GameCowcowReq
	(*GameCowcowBetResp)(nil),   // 4: go.GameCowcowBetResp
	(*GameCowcowOver)(nil),      // 5: go.GameCowcowOver
	(*GameCowcowCheckout)(nil),  // 6: go.GameCowcowCheckout
	(*PlayerInfo)(nil),          // 7: go.PlayerInfo
	(*CardInfo)(nil),            // 8: go.CardInfo
}
var file_cowcow_proto_depIdxs = []int32{
	7, // 0: go.GameCowcowEnter.UserInfo:type_name -> go.PlayerInfo
	8, // 1: go.GameCowcowOver.BankerCard:type_name -> go.CardInfo
	8, // 2: go.GameCowcowOver.TianCard:type_name -> go.CardInfo
	8, // 3: go.GameCowcowOver.XuanCard:type_name -> go.CardInfo
	8, // 4: go.GameCowcowOver.DiCard:type_name -> go.CardInfo
	8, // 5: go.GameCowcowOver.HuangCard:type_name -> go.CardInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_cowcow_proto_init() }
func file_cowcow_proto_init() {
	if File_cowcow_proto != nil {
		return
	}
	file_gamecomm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cowcow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowSuperHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowBetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cowcow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCowcowCheckout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cowcow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cowcow_proto_goTypes,
		DependencyIndexes: file_cowcow_proto_depIdxs,
		MessageInfos:      file_cowcow_proto_msgTypes,
	}.Build()
	File_cowcow_proto = out.File
	file_cowcow_proto_rawDesc = nil
	file_cowcow_proto_goTypes = nil
	file_cowcow_proto_depIdxs = nil
}
