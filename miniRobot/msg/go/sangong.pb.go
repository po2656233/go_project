// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: sangong.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// kindID 2006
//    牌型    倍数
//    (0~6点)  1
//    (7~9点)  2
//    三公     3
//    炸弹     4
//    爆玖     5
//三公玩家信息
type SangongPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyInfo     *PlayerInfo `protobuf:"bytes,1,opt,name=MyInfo,proto3" json:"MyInfo,omitempty"`
	Cards      *CardInfo   `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`            //
	CallScore  int64       `protobuf:"varint,3,opt,name=CallScore,proto3" json:"CallScore,omitempty"`   //叫分分值
	BetScore   int64       `protobuf:"varint,4,opt,name=BetScore,proto3" json:"BetScore,omitempty"`     //下注分值
	GainScore  int64       `protobuf:"varint,5,opt,name=GainScore,proto3" json:"GainScore,omitempty"`   //输赢分值
	TotalScore int64       `protobuf:"varint,6,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"` //总积分
}

func (x *SangongPlayer) Reset() {
	*x = SangongPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongPlayer) ProtoMessage() {}

func (x *SangongPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongPlayer.ProtoReflect.Descriptor instead.
func (*SangongPlayer) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{0}
}

func (x *SangongPlayer) GetMyInfo() *PlayerInfo {
	if x != nil {
		return x.MyInfo
	}
	return nil
}

func (x *SangongPlayer) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SangongPlayer) GetCallScore() int64 {
	if x != nil {
		return x.CallScore
	}
	return 0
}

func (x *SangongPlayer) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

func (x *SangongPlayer) GetGainScore() int64 {
	if x != nil {
		return x.GainScore
	}
	return 0
}

func (x *SangongPlayer) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

//入场
type EnterGameSGResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64         `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏标识
	ChairNum uint32         `protobuf:"varint,2,opt,name=ChairNum,proto3" json:"ChairNum,omitempty"` //椅子编号(不满足req的此项时,将由系统分配,并返回提示)
	Player   *SangongPlayer `protobuf:"bytes,3,opt,name=Player,proto3" json:"Player,omitempty"`
}

func (x *EnterGameSGResp) Reset() {
	*x = EnterGameSGResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterGameSGResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameSGResp) ProtoMessage() {}

func (x *EnterGameSGResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameSGResp.ProtoReflect.Descriptor instead.
func (*EnterGameSGResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{1}
}

func (x *EnterGameSGResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *EnterGameSGResp) GetChairNum() uint32 {
	if x != nil {
		return x.ChairNum
	}
	return 0
}

func (x *EnterGameSGResp) GetPlayer() *SangongPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

//场景
type SangongSceneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp  int64            `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`  //时间戳
	Chips      []int32          `protobuf:"varint,2,rep,packed,name=Chips,proto3" json:"Chips,omitempty"`   //筹码
	Inning     string           `protobuf:"bytes,3,opt,name=Inning,proto3" json:"Inning,omitempty"`         // 牌局号
	AllPlayers []*SangongPlayer `protobuf:"bytes,4,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` //玩家列表信息
	HostID     uint64           `protobuf:"varint,5,opt,name=HostID,proto3" json:"HostID,omitempty"`        //庄家ID =0表示无人坐庄,牌值最大者获胜
}

func (x *SangongSceneResp) Reset() {
	*x = SangongSceneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongSceneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongSceneResp) ProtoMessage() {}

func (x *SangongSceneResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongSceneResp.ProtoReflect.Descriptor instead.
func (*SangongSceneResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{2}
}

func (x *SangongSceneResp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *SangongSceneResp) GetChips() []int32 {
	if x != nil {
		return x.Chips
	}
	return nil
}

func (x *SangongSceneResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

func (x *SangongSceneResp) GetAllPlayers() []*SangongPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

func (x *SangongSceneResp) GetHostID() uint64 {
	if x != nil {
		return x.HostID
	}
	return 0
}

//状态
// 服务端推送
//(空闲 - )
type SangongStateFreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	Inning string    `protobuf:"bytes,2,opt,name=Inning,proto3" json:"Inning,omitempty"` // 牌局号
}

func (x *SangongStateFreeResp) Reset() {
	*x = SangongStateFreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateFreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateFreeResp) ProtoMessage() {}

func (x *SangongStateFreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateFreeResp.ProtoReflect.Descriptor instead.
func (*SangongStateFreeResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{3}
}

func (x *SangongStateFreeResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SangongStateFreeResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

//(开始 - 喊庄)
type SangongStateCallResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *SangongStateCallResp) Reset() {
	*x = SangongStateCallResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateCallResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateCallResp) ProtoMessage() {}

func (x *SangongStateCallResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateCallResp.ProtoReflect.Descriptor instead.
func (*SangongStateCallResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{4}
}

func (x *SangongStateCallResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//定庄
type SangongStateDecideResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times    *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	HostID   uint64    `protobuf:"varint,2,opt,name=HostID,proto3" json:"HostID,omitempty"`
	Multiple int64     `protobuf:"varint,3,opt,name=Multiple,proto3" json:"Multiple,omitempty"` //相同倍数 可用作
}

func (x *SangongStateDecideResp) Reset() {
	*x = SangongStateDecideResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateDecideResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateDecideResp) ProtoMessage() {}

func (x *SangongStateDecideResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateDecideResp.ProtoReflect.Descriptor instead.
func (*SangongStateDecideResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{5}
}

func (x *SangongStateDecideResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SangongStateDecideResp) GetHostID() uint64 {
	if x != nil {
		return x.HostID
	}
	return 0
}

func (x *SangongStateDecideResp) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

//(游戏中 - 下注)
type SangongStatePlayingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *SangongStatePlayingResp) Reset() {
	*x = SangongStatePlayingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStatePlayingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStatePlayingResp) ProtoMessage() {}

func (x *SangongStatePlayingResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStatePlayingResp.ProtoReflect.Descriptor instead.
func (*SangongStatePlayingResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{6}
}

func (x *SangongStatePlayingResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(发牌)
type SangongStateDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *SangongStateDealResp) Reset() {
	*x = SangongStateDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateDealResp) ProtoMessage() {}

func (x *SangongStateDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateDealResp.ProtoReflect.Descriptor instead.
func (*SangongStateDealResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{7}
}

func (x *SangongStateDealResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(摊牌)
type SangongStateOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times    *TimeInfo        `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	OpenInfo *SangongOpenResp `protobuf:"bytes,2,opt,name=OpenInfo,proto3" json:"OpenInfo,omitempty"`
}

func (x *SangongStateOpenResp) Reset() {
	*x = SangongStateOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateOpenResp) ProtoMessage() {}

func (x *SangongStateOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateOpenResp.ProtoReflect.Descriptor instead.
func (*SangongStateOpenResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{8}
}

func (x *SangongStateOpenResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SangongStateOpenResp) GetOpenInfo() *SangongOpenResp {
	if x != nil {
		return x.OpenInfo
	}
	return nil
}

//(结束)
type SangongStateOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *SangongStateOverResp) Reset() {
	*x = SangongStateOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongStateOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongStateOverResp) ProtoMessage() {}

func (x *SangongStateOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongStateOverResp.ProtoReflect.Descriptor instead.
func (*SangongStateOverResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{9}
}

func (x *SangongStateOverResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//////////有些玩家不配有牌////////
type SangongDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cards  *CardInfo `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"` //只有开奖时有真实值
}

func (x *SangongDealResp) Reset() {
	*x = SangongDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongDealResp) ProtoMessage() {}

func (x *SangongDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongDealResp.ProtoReflect.Descriptor instead.
func (*SangongDealResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{10}
}

func (x *SangongDealResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SangongDealResp) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//////////////////////////////////////
//准备
type SangongReadyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *SangongReadyReq) Reset() {
	*x = SangongReadyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongReadyReq) ProtoMessage() {}

func (x *SangongReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongReadyReq.ProtoReflect.Descriptor instead.
func (*SangongReadyReq) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{11}
}

func (x *SangongReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type SangongReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsReady bool   `protobuf:"varint,2,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *SangongReadyResp) Reset() {
	*x = SangongReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongReadyResp) ProtoMessage() {}

func (x *SangongReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongReadyResp.ProtoReflect.Descriptor instead.
func (*SangongReadyResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{12}
}

func (x *SangongReadyResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SangongReadyResp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

//喊庄
type SangongCallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Multiple int64 `protobuf:"varint,1,opt,name=Multiple,proto3" json:"Multiple,omitempty"` //喊庄倍数
}

func (x *SangongCallReq) Reset() {
	*x = SangongCallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongCallReq) ProtoMessage() {}

func (x *SangongCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongCallReq.ProtoReflect.Descriptor instead.
func (*SangongCallReq) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{13}
}

func (x *SangongCallReq) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type SangongCallResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Multiple int64  `protobuf:"varint,2,opt,name=Multiple,proto3" json:"Multiple,omitempty"` //喊庄倍数
}

func (x *SangongCallResp) Reset() {
	*x = SangongCallResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongCallResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongCallResp) ProtoMessage() {}

func (x *SangongCallResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongCallResp.ProtoReflect.Descriptor instead.
func (*SangongCallResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{14}
}

func (x *SangongCallResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SangongCallResp) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

//下注
type SangongBetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetScore int64 `protobuf:"varint,1,opt,name=BetScore,proto3" json:"BetScore,omitempty"` //倍数
}

func (x *SangongBetReq) Reset() {
	*x = SangongBetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongBetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongBetReq) ProtoMessage() {}

func (x *SangongBetReq) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongBetReq.ProtoReflect.Descriptor instead.
func (*SangongBetReq) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{15}
}

func (x *SangongBetReq) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

type SangongBetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	BetScore int64  `protobuf:"varint,2,opt,name=BetScore,proto3" json:"BetScore,omitempty"` //倍数
}

func (x *SangongBetResp) Reset() {
	*x = SangongBetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongBetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongBetResp) ProtoMessage() {}

func (x *SangongBetResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongBetResp.ProtoReflect.Descriptor instead.
func (*SangongBetResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{16}
}

func (x *SangongBetResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SangongBetResp) GetBetScore() int64 {
	if x != nil {
		return x.BetScore
	}
	return 0
}

//摊牌
type SangongOutCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SangongOutCardReq) Reset() {
	*x = SangongOutCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongOutCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongOutCardReq) ProtoMessage() {}

func (x *SangongOutCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongOutCardReq.ProtoReflect.Descriptor instead.
func (*SangongOutCardReq) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{17}
}

type SangongOutCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cards  *CardInfo `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"` //
}

func (x *SangongOutCardResp) Reset() {
	*x = SangongOutCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongOutCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongOutCardResp) ProtoMessage() {}

func (x *SangongOutCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongOutCardResp.ProtoReflect.Descriptor instead.
func (*SangongOutCardResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{18}
}

func (x *SangongOutCardResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SangongOutCardResp) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//结算
type SangongOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllPlayers []*SangongPlayer `protobuf:"bytes,1,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` //玩家列表信息
}

func (x *SangongOpenResp) Reset() {
	*x = SangongOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sangong_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SangongOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SangongOpenResp) ProtoMessage() {}

func (x *SangongOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_sangong_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SangongOpenResp.ProtoReflect.Descriptor instead.
func (*SangongOpenResp) Descriptor() ([]byte, []int) {
	return file_sangong_proto_rawDescGZIP(), []int{19}
}

func (x *SangongOpenResp) GetAllPlayers() []*SangongPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

var File_sangong_proto protoreflect.FileDescriptor

var file_sangong_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x67, 0x6f, 0x1a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x0d, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x47, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x70, 0x0a, 0x0f, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x47, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x29, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x10,
	0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x68, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x0a,
	0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x67, 0x6f,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x0a, 0x14, 0x53,
	0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x16, 0x53, 0x61, 0x6e, 0x67, 0x6f,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x3d, 0x0a, 0x17, 0x53, 0x61, 0x6e,
	0x67, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x67,
	0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x4f,
	0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4d, 0x0a,
	0x0f, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x0f,
	0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x44, 0x0a, 0x10, 0x53, 0x61, 0x6e,
	0x67, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22,
	0x2c, 0x0a, 0x0e, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x45, 0x0a,
	0x0f, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x42,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x42,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x61, 0x6e, 0x67, 0x6f,
	0x6e, 0x67, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x50, 0x0a, 0x12,
	0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x44,
	0x0a, 0x0f, 0x53, 0x61, 0x6e, 0x67, 0x6f, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x6f,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sangong_proto_rawDescOnce sync.Once
	file_sangong_proto_rawDescData = file_sangong_proto_rawDesc
)

func file_sangong_proto_rawDescGZIP() []byte {
	file_sangong_proto_rawDescOnce.Do(func() {
		file_sangong_proto_rawDescData = protoimpl.X.CompressGZIP(file_sangong_proto_rawDescData)
	})
	return file_sangong_proto_rawDescData
}

var file_sangong_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_sangong_proto_goTypes = []interface{}{
	(*SangongPlayer)(nil),           // 0: go.SangongPlayer
	(*EnterGameSGResp)(nil),         // 1: go.EnterGameSGResp
	(*SangongSceneResp)(nil),        // 2: go.SangongSceneResp
	(*SangongStateFreeResp)(nil),    // 3: go.SangongStateFreeResp
	(*SangongStateCallResp)(nil),    // 4: go.SangongStateCallResp
	(*SangongStateDecideResp)(nil),  // 5: go.SangongStateDecideResp
	(*SangongStatePlayingResp)(nil), // 6: go.SangongStatePlayingResp
	(*SangongStateDealResp)(nil),    // 7: go.SangongStateDealResp
	(*SangongStateOpenResp)(nil),    // 8: go.SangongStateOpenResp
	(*SangongStateOverResp)(nil),    // 9: go.SangongStateOverResp
	(*SangongDealResp)(nil),         // 10: go.SangongDealResp
	(*SangongReadyReq)(nil),         // 11: go.SangongReadyReq
	(*SangongReadyResp)(nil),        // 12: go.SangongReadyResp
	(*SangongCallReq)(nil),          // 13: go.SangongCallReq
	(*SangongCallResp)(nil),         // 14: go.SangongCallResp
	(*SangongBetReq)(nil),           // 15: go.SangongBetReq
	(*SangongBetResp)(nil),          // 16: go.SangongBetResp
	(*SangongOutCardReq)(nil),       // 17: go.SangongOutCardReq
	(*SangongOutCardResp)(nil),      // 18: go.SangongOutCardResp
	(*SangongOpenResp)(nil),         // 19: go.SangongOpenResp
	(*PlayerInfo)(nil),              // 20: go.PlayerInfo
	(*CardInfo)(nil),                // 21: go.CardInfo
	(*TimeInfo)(nil),                // 22: go.TimeInfo
}
var file_sangong_proto_depIdxs = []int32{
	20, // 0: go.SangongPlayer.MyInfo:type_name -> go.PlayerInfo
	21, // 1: go.SangongPlayer.Cards:type_name -> go.CardInfo
	0,  // 2: go.EnterGameSGResp.Player:type_name -> go.SangongPlayer
	0,  // 3: go.SangongSceneResp.AllPlayers:type_name -> go.SangongPlayer
	22, // 4: go.SangongStateFreeResp.Times:type_name -> go.TimeInfo
	22, // 5: go.SangongStateCallResp.Times:type_name -> go.TimeInfo
	22, // 6: go.SangongStateDecideResp.Times:type_name -> go.TimeInfo
	22, // 7: go.SangongStatePlayingResp.Times:type_name -> go.TimeInfo
	22, // 8: go.SangongStateDealResp.Times:type_name -> go.TimeInfo
	22, // 9: go.SangongStateOpenResp.Times:type_name -> go.TimeInfo
	19, // 10: go.SangongStateOpenResp.OpenInfo:type_name -> go.SangongOpenResp
	22, // 11: go.SangongStateOverResp.Times:type_name -> go.TimeInfo
	21, // 12: go.SangongDealResp.Cards:type_name -> go.CardInfo
	21, // 13: go.SangongOutCardResp.Cards:type_name -> go.CardInfo
	0,  // 14: go.SangongOpenResp.AllPlayers:type_name -> go.SangongPlayer
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sangong_proto_init() }
func file_sangong_proto_init() {
	if File_sangong_proto != nil {
		return
	}
	file_gamecomm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sangong_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterGameSGResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongSceneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateFreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateCallResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateDecideResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStatePlayingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongStateOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongReadyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongCallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongCallResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongBetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongBetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongOutCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongOutCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sangong_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SangongOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sangong_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sangong_proto_goTypes,
		DependencyIndexes: file_sangong_proto_depIdxs,
		MessageInfos:      file_sangong_proto_msgTypes,
	}.Build()
	File_sangong_proto = out.File
	file_sangong_proto_rawDesc = nil
	file_sangong_proto_goTypes = nil
	file_sangong_proto_depIdxs = nil
}
