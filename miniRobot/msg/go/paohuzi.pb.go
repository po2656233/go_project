// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: paohuzi.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//番种()
type FanPHZT int32

const (
	FanPHZT_FAN_PHZ_INVALID FanPHZT = 0 //无效番种
	//========番========
	FanPHZT_FAN_PHZ_QISHOU   FanPHZT = 1  //起手胡
	FanPHZT_FAN_PHZ_PONG     FanPHZT = 2  //碰胡
	FanPHZT_FAN_PHZ_WEI      FanPHZT = 3  //偎胡
	FanPHZT_FAN_PHZ_PAO      FanPHZT = 4  //跑胡
	FanPHZT_FAN_PHZ_TI       FanPHZT = 5  //提胡
	FanPHZT_FAN_PHZ_SHUN     FanPHZT = 6  //顺胡
	FanPHZT_FAN_PHZ_BIAN     FanPHZT = 7  //编胡
	FanPHZT_FAN_PHZ_POPAO    FanPHZT = 8  //破跑胡
	FanPHZT_FAN_PHZ_DANDIAO  FanPHZT = 9  //单调胡
	FanPHZT_FAN_PHZ_LIANGTOU FanPHZT = 10 //两头胡
	FanPHZT_FAN_PHZ_ZHA      FanPHZT = 11 //诈胡
)

// Enum value maps for FanPHZT.
var (
	FanPHZT_name = map[int32]string{
		0:  "FAN_PHZ_INVALID",
		1:  "FAN_PHZ_QISHOU",
		2:  "FAN_PHZ_PONG",
		3:  "FAN_PHZ_WEI",
		4:  "FAN_PHZ_PAO",
		5:  "FAN_PHZ_TI",
		6:  "FAN_PHZ_SHUN",
		7:  "FAN_PHZ_BIAN",
		8:  "FAN_PHZ_POPAO",
		9:  "FAN_PHZ_DANDIAO",
		10: "FAN_PHZ_LIANGTOU",
		11: "FAN_PHZ_ZHA",
	}
	FanPHZT_value = map[string]int32{
		"FAN_PHZ_INVALID":  0,
		"FAN_PHZ_QISHOU":   1,
		"FAN_PHZ_PONG":     2,
		"FAN_PHZ_WEI":      3,
		"FAN_PHZ_PAO":      4,
		"FAN_PHZ_TI":       5,
		"FAN_PHZ_SHUN":     6,
		"FAN_PHZ_BIAN":     7,
		"FAN_PHZ_POPAO":    8,
		"FAN_PHZ_DANDIAO":  9,
		"FAN_PHZ_LIANGTOU": 10,
		"FAN_PHZ_ZHA":      11,
	}
)

func (x FanPHZT) Enum() *FanPHZT {
	p := new(FanPHZT)
	*p = x
	return p
}

func (x FanPHZT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FanPHZT) Descriptor() protoreflect.EnumDescriptor {
	return file_paohuzi_proto_enumTypes[0].Descriptor()
}

func (FanPHZT) Type() protoreflect.EnumType {
	return &file_paohuzi_proto_enumTypes[0]
}

func (x FanPHZT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FanPHZT.Descriptor instead.
func (FanPHZT) EnumDescriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{0}
}

// kindID 3012
////////////////////玩法介绍/////////////////////////////
// 详情已转至文件末尾,请查阅-->
/////////////////////番型解义(请看文件末部)///////////////////
//刻子
type PaohuziKeZi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []int32    `protobuf:"varint,1,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`
	Code  PHZOperate `protobuf:"varint,2,opt,name=Code,proto3,enum=go.PHZOperate" json:"Code,omitempty"`
	ByUid uint64     `protobuf:"varint,3,opt,name=ByUid,proto3" json:"ByUid,omitempty"` // 由谁提供
}

func (x *PaohuziKeZi) Reset() {
	*x = PaohuziKeZi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziKeZi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziKeZi) ProtoMessage() {}

func (x *PaohuziKeZi) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziKeZi.ProtoReflect.Descriptor instead.
func (*PaohuziKeZi) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{0}
}

func (x *PaohuziKeZi) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PaohuziKeZi) GetCode() PHZOperate {
	if x != nil {
		return x.Code
	}
	return PHZOperate_PHZ_NULL
}

func (x *PaohuziKeZi) GetByUid() uint64 {
	if x != nil {
		return x.ByUid
	}
	return 0
}

//提示
type PaohuziHint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  PHZOperate `protobuf:"varint,1,opt,name=Code,proto3,enum=go.PHZOperate" json:"Code,omitempty"` // 操作码
	Cards []int32    `protobuf:"varint,2,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`           // 听哪几张牌| 胡牌和自摸皆为一张
	ByUid uint64     `protobuf:"varint,3,opt,name=ByUid,proto3" json:"ByUid,omitempty"`                  // 由谁提供
}

func (x *PaohuziHint) Reset() {
	*x = PaohuziHint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziHint) ProtoMessage() {}

func (x *PaohuziHint) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziHint.ProtoReflect.Descriptor instead.
func (*PaohuziHint) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{1}
}

func (x *PaohuziHint) GetCode() PHZOperate {
	if x != nil {
		return x.Code
	}
	return PHZOperate_PHZ_NULL
}

func (x *PaohuziHint) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PaohuziHint) GetByUid() uint64 {
	if x != nil {
		return x.ByUid
	}
	return 0
}

//跑胡子玩家信息
type PaohuziPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyInfo     *PlayerInfo    `protobuf:"bytes,1,opt,name=MyInfo,proto3" json:"MyInfo,omitempty"`                 //
	HandCards  []int32        `protobuf:"varint,2,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"`   //手牌
	KeZiCards  []*PaohuziKeZi `protobuf:"bytes,3,rep,name=KeZiCards,proto3" json:"KeZiCards,omitempty"`           // 吃牌 桌牌:明在桌面上的牌,即碰、吃、提、偎后的牌
	TableCards []int32        `protobuf:"varint,4,rep,packed,name=TableCards,proto3" json:"TableCards,omitempty"` //玩家的桌面牌值
	GainScore  int64          `protobuf:"varint,5,opt,name=GainScore,proto3" json:"GainScore,omitempty"`          //输赢分值
	TotalScore int64          `protobuf:"varint,6,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"`        //总积分(当不为系统房时,该分值可以为负分)
	OpHints    []*PaohuziHint `protobuf:"bytes,7,rep,name=OpHints,proto3" json:"OpHints,omitempty"`               //玩家可操作(恢复场景)
}

func (x *PaohuziPlayer) Reset() {
	*x = PaohuziPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziPlayer) ProtoMessage() {}

func (x *PaohuziPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziPlayer.ProtoReflect.Descriptor instead.
func (*PaohuziPlayer) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{2}
}

func (x *PaohuziPlayer) GetMyInfo() *PlayerInfo {
	if x != nil {
		return x.MyInfo
	}
	return nil
}

func (x *PaohuziPlayer) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

func (x *PaohuziPlayer) GetKeZiCards() []*PaohuziKeZi {
	if x != nil {
		return x.KeZiCards
	}
	return nil
}

func (x *PaohuziPlayer) GetTableCards() []int32 {
	if x != nil {
		return x.TableCards
	}
	return nil
}

func (x *PaohuziPlayer) GetGainScore() int64 {
	if x != nil {
		return x.GainScore
	}
	return 0
}

func (x *PaohuziPlayer) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *PaohuziPlayer) GetOpHints() []*PaohuziHint {
	if x != nil {
		return x.OpHints
	}
	return nil
}

//入场
type EnterGamePHZResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   uint64         `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`     //游戏标识
	ChairNum uint32         `protobuf:"varint,2,opt,name=ChairNum,proto3" json:"ChairNum,omitempty"` //椅子编号(不满足req的此项时,将由系统分配,并返回提示)
	Player   *PaohuziPlayer `protobuf:"bytes,3,opt,name=Player,proto3" json:"Player,omitempty"`
}

func (x *EnterGamePHZResp) Reset() {
	*x = EnterGamePHZResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterGamePHZResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGamePHZResp) ProtoMessage() {}

func (x *EnterGamePHZResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGamePHZResp.ProtoReflect.Descriptor instead.
func (*EnterGamePHZResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{3}
}

func (x *EnterGamePHZResp) GetGameID() uint64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *EnterGamePHZResp) GetChairNum() uint32 {
	if x != nil {
		return x.ChairNum
	}
	return 0
}

func (x *EnterGamePHZResp) GetPlayer() *PaohuziPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

//场景
type PaohuziSceneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp   int64            `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`     // 时间戳
	RunCount    int32            `protobuf:"varint,2,opt,name=RunCount,proto3" json:"RunCount,omitempty"`       // 当前局数
	RemainCount int32            `protobuf:"varint,3,opt,name=RemainCount,proto3" json:"RemainCount,omitempty"` // 剩余张数
	BankerID    uint64           `protobuf:"varint,4,opt,name=BankerID,proto3" json:"BankerID,omitempty"`       // 庄家ID
	CurrentID   uint64           `protobuf:"varint,5,opt,name=CurrentID,proto3" json:"CurrentID,omitempty"`     // 当前玩家ID
	Inning      string           `protobuf:"bytes,6,opt,name=Inning,proto3" json:"Inning,omitempty"`            // 牌局号
	HuCard      int32            `protobuf:"varint,7,opt,name=HuCard,proto3" json:"HuCard,omitempty"`           // 胡牌,或自摸时的摸起的最后一张
	AllPlayers  []*PaohuziPlayer `protobuf:"bytes,8,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"`    //玩家列表(吃碰提偎)
}

func (x *PaohuziSceneResp) Reset() {
	*x = PaohuziSceneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziSceneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziSceneResp) ProtoMessage() {}

func (x *PaohuziSceneResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziSceneResp.ProtoReflect.Descriptor instead.
func (*PaohuziSceneResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{4}
}

func (x *PaohuziSceneResp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *PaohuziSceneResp) GetRunCount() int32 {
	if x != nil {
		return x.RunCount
	}
	return 0
}

func (x *PaohuziSceneResp) GetRemainCount() int32 {
	if x != nil {
		return x.RemainCount
	}
	return 0
}

func (x *PaohuziSceneResp) GetBankerID() uint64 {
	if x != nil {
		return x.BankerID
	}
	return 0
}

func (x *PaohuziSceneResp) GetCurrentID() uint64 {
	if x != nil {
		return x.CurrentID
	}
	return 0
}

func (x *PaohuziSceneResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

func (x *PaohuziSceneResp) GetHuCard() int32 {
	if x != nil {
		return x.HuCard
	}
	return 0
}

func (x *PaohuziSceneResp) GetAllPlayers() []*PaohuziPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

//状态
// 服务端推送
//(空闲 - Free)
type PaohuziStateFreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	Inning string    `protobuf:"bytes,2,opt,name=Inning,proto3" json:"Inning,omitempty"` // 牌局号
}

func (x *PaohuziStateFreeResp) Reset() {
	*x = PaohuziStateFreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateFreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateFreeResp) ProtoMessage() {}

func (x *PaohuziStateFreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateFreeResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateFreeResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{5}
}

func (x *PaohuziStateFreeResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *PaohuziStateFreeResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

//抓阄 (首局需要抓阄决定庄家)
type PaohuziStateDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	Cards []byte    `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"` //用于抓阄的牌值。(牌数 == 已准备的人数 [展示用])
}

func (x *PaohuziStateDrawResp) Reset() {
	*x = PaohuziStateDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateDrawResp) ProtoMessage() {}

func (x *PaohuziStateDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateDrawResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateDrawResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{6}
}

func (x *PaohuziStateDrawResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *PaohuziStateDrawResp) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

//定庄 - Decide 系统定庄
type PaohuziStateDecideResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times    *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	BankerID uint64    `protobuf:"varint,2,opt,name=BankerID,proto3" json:"BankerID,omitempty"` //
}

func (x *PaohuziStateDecideResp) Reset() {
	*x = PaohuziStateDecideResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateDecideResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateDecideResp) ProtoMessage() {}

func (x *PaohuziStateDecideResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateDecideResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateDecideResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{7}
}

func (x *PaohuziStateDecideResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *PaohuziStateDecideResp) GetBankerID() uint64 {
	if x != nil {
		return x.BankerID
	}
	return 0
}

//(开始游戏) - Start
type PaohuziStateStartResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *PaohuziStateStartResp) Reset() {
	*x = PaohuziStateStartResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateStartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateStartResp) ProtoMessage() {}

func (x *PaohuziStateStartResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateStartResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateStartResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{8}
}

func (x *PaohuziStateStartResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(游戏中) - Playing
type PaohuziStatePlayingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	UserID uint64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"` // 轮到谁
	Card   int32     `protobuf:"varint,3,opt,name=Card,proto3" json:"Card,omitempty"`     // 只有UserID的玩家有牌值
}

func (x *PaohuziStatePlayingResp) Reset() {
	*x = PaohuziStatePlayingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStatePlayingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStatePlayingResp) ProtoMessage() {}

func (x *PaohuziStatePlayingResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStatePlayingResp.ProtoReflect.Descriptor instead.
func (*PaohuziStatePlayingResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{9}
}

func (x *PaohuziStatePlayingResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *PaohuziStatePlayingResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziStatePlayingResp) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

//等待操作(仅对有提示的玩家提供)
type PaohuziStateWaitOperateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *PaohuziStateWaitOperateResp) Reset() {
	*x = PaohuziStateWaitOperateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateWaitOperateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateWaitOperateResp) ProtoMessage() {}

func (x *PaohuziStateWaitOperateResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateWaitOperateResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateWaitOperateResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{10}
}

func (x *PaohuziStateWaitOperateResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//(开奖) - Opening
type PaohuziStateOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times      *TimeInfo        `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
	IsFlow     bool             `protobuf:"varint,2,opt,name=IsFlow,proto3" json:"IsFlow,omitempty"`        // 是否流局
	HuCard     int32            `protobuf:"varint,3,opt,name=HuCard,proto3" json:"HuCard,omitempty"`        // 胡牌,或自摸时的摸起的最后一张
	WinnerID   uint64           `protobuf:"varint,4,opt,name=WinnerID,proto3" json:"WinnerID,omitempty"`    //胜利者ID（流局时为0）
	Fans       []byte           `protobuf:"bytes,5,opt,name=Fans,proto3" json:"Fans,omitempty"`             //番型列表 每个元素对应一个番型
	FanCount   int32            `protobuf:"varint,6,opt,name=FanCount,proto3" json:"FanCount,omitempty"`    //共计番数
	AllPlayers []*PaohuziPlayer `protobuf:"bytes,7,rep,name=AllPlayers,proto3" json:"AllPlayers,omitempty"` //所有玩家得分
}

func (x *PaohuziStateOpenResp) Reset() {
	*x = PaohuziStateOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateOpenResp) ProtoMessage() {}

func (x *PaohuziStateOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateOpenResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateOpenResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{11}
}

func (x *PaohuziStateOpenResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *PaohuziStateOpenResp) GetIsFlow() bool {
	if x != nil {
		return x.IsFlow
	}
	return false
}

func (x *PaohuziStateOpenResp) GetHuCard() int32 {
	if x != nil {
		return x.HuCard
	}
	return 0
}

func (x *PaohuziStateOpenResp) GetWinnerID() uint64 {
	if x != nil {
		return x.WinnerID
	}
	return 0
}

func (x *PaohuziStateOpenResp) GetFans() []byte {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PaohuziStateOpenResp) GetFanCount() int32 {
	if x != nil {
		return x.FanCount
	}
	return 0
}

func (x *PaohuziStateOpenResp) GetAllPlayers() []*PaohuziPlayer {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

//(结束) - Over
type PaohuziStateOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *TimeInfo `protobuf:"bytes,1,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *PaohuziStateOverResp) Reset() {
	*x = PaohuziStateOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziStateOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziStateOverResp) ProtoMessage() {}

func (x *PaohuziStateOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziStateOverResp.ProtoReflect.Descriptor instead.
func (*PaohuziStateOverResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{12}
}

func (x *PaohuziStateOverResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

//////////////////////////////////////////////
//////////////////////////////////////////////
//准备
type PaohuziReadyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *PaohuziReadyReq) Reset() {
	*x = PaohuziReadyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziReadyReq) ProtoMessage() {}

func (x *PaohuziReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziReadyReq.ProtoReflect.Descriptor instead.
func (*PaohuziReadyReq) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{13}
}

func (x *PaohuziReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type PaohuziReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsReady bool   `protobuf:"varint,2,opt,name=IsReady,proto3" json:"IsReady,omitempty"` // 玩家准备，可以取消准备
}

func (x *PaohuziReadyResp) Reset() {
	*x = PaohuziReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziReadyResp) ProtoMessage() {}

func (x *PaohuziReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziReadyResp.ProtoReflect.Descriptor instead.
func (*PaohuziReadyResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{14}
}

func (x *PaohuziReadyResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziReadyResp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

//
//首局 倒牌比大小
type PaohuziShowDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Card   int32  `protobuf:"varint,2,opt,name=Card,proto3" json:"Card,omitempty"` //
}

func (x *PaohuziShowDrawResp) Reset() {
	*x = PaohuziShowDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziShowDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziShowDrawResp) ProtoMessage() {}

func (x *PaohuziShowDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziShowDrawResp.ProtoReflect.Descriptor instead.
func (*PaohuziShowDrawResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{15}
}

func (x *PaohuziShowDrawResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziShowDrawResp) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

// 玩家打出去的牌
type PaohuziOutCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card int32 `protobuf:"varint,1,opt,name=Card,proto3" json:"Card,omitempty"` //
}

func (x *PaohuziOutCardReq) Reset() {
	*x = PaohuziOutCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziOutCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziOutCardReq) ProtoMessage() {}

func (x *PaohuziOutCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziOutCardReq.ProtoReflect.Descriptor instead.
func (*PaohuziOutCardReq) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{16}
}

func (x *PaohuziOutCardReq) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

type PaohuziOutCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
	Card   int32  `protobuf:"varint,2,opt,name=Card,proto3" json:"Card,omitempty"`     //
}

func (x *PaohuziOutCardResp) Reset() {
	*x = PaohuziOutCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziOutCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziOutCardResp) ProtoMessage() {}

func (x *PaohuziOutCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziOutCardResp.ProtoReflect.Descriptor instead.
func (*PaohuziOutCardResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{17}
}

func (x *PaohuziOutCardResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziOutCardResp) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

// 操作
type PaohuziOperateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  PHZOperate `protobuf:"varint,1,opt,name=Code,proto3,enum=go.PHZOperate" json:"Code,omitempty"` // 操作码 pass表示弃牌
	Cards []int32    `protobuf:"varint,2,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`           // 吃|碰|提偎 时的手牌
}

func (x *PaohuziOperateReq) Reset() {
	*x = PaohuziOperateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziOperateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziOperateReq) ProtoMessage() {}

func (x *PaohuziOperateReq) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziOperateReq.ProtoReflect.Descriptor instead.
func (*PaohuziOperateReq) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{18}
}

func (x *PaohuziOperateReq) GetCode() PHZOperate {
	if x != nil {
		return x.Code
	}
	return PHZOperate_PHZ_NULL
}

func (x *PaohuziOperateReq) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

type PaohuziOperateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64     `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                // 玩家ID
	Code   PHZOperate `protobuf:"varint,2,opt,name=Code,proto3,enum=go.PHZOperate" json:"Code,omitempty"` // 操作码
	Cards  []int32    `protobuf:"varint,3,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`           // 吃|碰|提偎 时的组合牌
}

func (x *PaohuziOperateResp) Reset() {
	*x = PaohuziOperateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziOperateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziOperateResp) ProtoMessage() {}

func (x *PaohuziOperateResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziOperateResp.ProtoReflect.Descriptor instead.
func (*PaohuziOperateResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{19}
}

func (x *PaohuziOperateResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziOperateResp) GetCode() PHZOperate {
	if x != nil {
		return x.Code
	}
	return PHZOperate_PHZ_NULL
}

func (x *PaohuziOperateResp) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

//////////////////////////////////////////////
//
//发牌 首局时,先发一张比较大小
type PaohuziDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`              // 玩家ID
	CurPos    int32   `protobuf:"varint,2,opt,name=CurPos,proto3" json:"CurPos,omitempty"`              // 抓牌起始位置
	HandCards []int32 `protobuf:"varint,3,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"` // 玩家的手牌(座位上的玩家才有,且只能拿到自己的牌值)
}

func (x *PaohuziDealResp) Reset() {
	*x = PaohuziDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziDealResp) ProtoMessage() {}

func (x *PaohuziDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziDealResp.ProtoReflect.Descriptor instead.
func (*PaohuziDealResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{20}
}

func (x *PaohuziDealResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziDealResp) GetCurPos() int32 {
	if x != nil {
		return x.CurPos
	}
	return 0
}

func (x *PaohuziDealResp) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

//
// 玩家只能收到自己的
type PaohuziHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64         `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 玩家ID
	Hints  []*PaohuziHint `protobuf:"bytes,2,rep,name=Hints,proto3" json:"Hints,omitempty"`    //提示 注意:吃牌时,有多种组合 cards仅提供玩家手牌牌值
}

func (x *PaohuziHintResp) Reset() {
	*x = PaohuziHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paohuzi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaohuziHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaohuziHintResp) ProtoMessage() {}

func (x *PaohuziHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_paohuzi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaohuziHintResp.ProtoReflect.Descriptor instead.
func (*PaohuziHintResp) Descriptor() ([]byte, []int) {
	return file_paohuzi_proto_rawDescGZIP(), []int{21}
}

func (x *PaohuziHintResp) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PaohuziHintResp) GetHints() []*PaohuziHint {
	if x != nil {
		return x.Hints
	}
	return nil
}

var File_paohuzi_proto protoreflect.FileDescriptor

var file_paohuzi_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x67, 0x6f, 0x1a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0b, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x4b, 0x65,
	0x5a, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x48, 0x5a, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x42, 0x79, 0x55,
	0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0b, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x48, 0x69, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x48, 0x5a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x22, 0x8d, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x48,
	0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x4b, 0x65, 0x5a,
	0x69, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6f, 0x2e, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x4b, 0x65, 0x5a, 0x69, 0x52, 0x09, 0x4b,
	0x65, 0x5a, 0x69, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x69, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x61, 0x69,
	0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x4f, 0x70, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x61, 0x6f,
	0x68, 0x75, 0x7a, 0x69, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x4f, 0x70, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x71, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x48,
	0x5a, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e, 0x50,
	0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x8b, 0x02, 0x0a, 0x10, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x75, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x75, 0x43, 0x61, 0x72,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x75, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x31, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x22, 0x52, 0x0a, 0x14, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x49, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x14, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a,
	0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x50, 0x61, 0x6f, 0x68,
	0x75, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x3b, 0x0a, 0x15, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22,
	0x69, 0x0a, 0x17, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x61, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x1b, 0x50, 0x61,
	0x6f, 0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xe9, 0x01,
	0x0a, 0x14, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x75, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x48, 0x75, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x57, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x61, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x46, 0x61,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x2e,
	0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x41,
	0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x50, 0x61, 0x6f,
	0x68, 0x75, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x22, 0x44, 0x0a, 0x10, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x41, 0x0a, 0x13, 0x50, 0x61, 0x6f, 0x68,
	0x75, 0x7a, 0x69, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x61, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x50,
	0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x43, 0x61, 0x72, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x4f,
	0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x61, 0x72, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a,
	0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50,
	0x48, 0x5a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x12, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x48, 0x5a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5f, 0x0a,
	0x0f, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x50,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x75, 0x72, 0x50, 0x6f, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x50,
	0x0a, 0x0f, 0x50, 0x61, 0x6f, 0x68, 0x75, 0x7a, 0x69, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x05, 0x48, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x50, 0x61,
	0x6f, 0x68, 0x75, 0x7a, 0x69, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73,
	0x2a, 0xea, 0x01, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x50, 0x48, 0x5a, 0x5f, 0x74, 0x12, 0x13, 0x0a,
	0x0f, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x51, 0x49,
	0x53, 0x48, 0x4f, 0x55, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48,
	0x5a, 0x5f, 0x50, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x41, 0x4e, 0x5f,
	0x50, 0x48, 0x5a, 0x5f, 0x57, 0x45, 0x49, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x41, 0x4e,
	0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x50, 0x41, 0x4f, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41,
	0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x54, 0x49, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41,
	0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x53, 0x48, 0x55, 0x4e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x42, 0x49, 0x41, 0x4e, 0x10, 0x07, 0x12, 0x11,
	0x0a, 0x0d, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x50, 0x4f, 0x50, 0x41, 0x4f, 0x10,
	0x08, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x44, 0x41, 0x4e,
	0x44, 0x49, 0x41, 0x4f, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48,
	0x5a, 0x5f, 0x4c, 0x49, 0x41, 0x4e, 0x47, 0x54, 0x4f, 0x55, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b,
	0x46, 0x41, 0x4e, 0x5f, 0x50, 0x48, 0x5a, 0x5f, 0x5a, 0x48, 0x41, 0x10, 0x0b, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paohuzi_proto_rawDescOnce sync.Once
	file_paohuzi_proto_rawDescData = file_paohuzi_proto_rawDesc
)

func file_paohuzi_proto_rawDescGZIP() []byte {
	file_paohuzi_proto_rawDescOnce.Do(func() {
		file_paohuzi_proto_rawDescData = protoimpl.X.CompressGZIP(file_paohuzi_proto_rawDescData)
	})
	return file_paohuzi_proto_rawDescData
}

var file_paohuzi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_paohuzi_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_paohuzi_proto_goTypes = []interface{}{
	(FanPHZT)(0),                        // 0: go.FanPHZ_t
	(*PaohuziKeZi)(nil),                 // 1: go.PaohuziKeZi
	(*PaohuziHint)(nil),                 // 2: go.PaohuziHint
	(*PaohuziPlayer)(nil),               // 3: go.PaohuziPlayer
	(*EnterGamePHZResp)(nil),            // 4: go.EnterGamePHZResp
	(*PaohuziSceneResp)(nil),            // 5: go.PaohuziSceneResp
	(*PaohuziStateFreeResp)(nil),        // 6: go.PaohuziStateFreeResp
	(*PaohuziStateDrawResp)(nil),        // 7: go.PaohuziStateDrawResp
	(*PaohuziStateDecideResp)(nil),      // 8: go.PaohuziStateDecideResp
	(*PaohuziStateStartResp)(nil),       // 9: go.PaohuziStateStartResp
	(*PaohuziStatePlayingResp)(nil),     // 10: go.PaohuziStatePlayingResp
	(*PaohuziStateWaitOperateResp)(nil), // 11: go.PaohuziStateWaitOperateResp
	(*PaohuziStateOpenResp)(nil),        // 12: go.PaohuziStateOpenResp
	(*PaohuziStateOverResp)(nil),        // 13: go.PaohuziStateOverResp
	(*PaohuziReadyReq)(nil),             // 14: go.PaohuziReadyReq
	(*PaohuziReadyResp)(nil),            // 15: go.PaohuziReadyResp
	(*PaohuziShowDrawResp)(nil),         // 16: go.PaohuziShowDrawResp
	(*PaohuziOutCardReq)(nil),           // 17: go.PaohuziOutCardReq
	(*PaohuziOutCardResp)(nil),          // 18: go.PaohuziOutCardResp
	(*PaohuziOperateReq)(nil),           // 19: go.PaohuziOperateReq
	(*PaohuziOperateResp)(nil),          // 20: go.PaohuziOperateResp
	(*PaohuziDealResp)(nil),             // 21: go.PaohuziDealResp
	(*PaohuziHintResp)(nil),             // 22: go.PaohuziHintResp
	(PHZOperate)(0),                     // 23: go.PHZOperate
	(*PlayerInfo)(nil),                  // 24: go.PlayerInfo
	(*TimeInfo)(nil),                    // 25: go.TimeInfo
}
var file_paohuzi_proto_depIdxs = []int32{
	23, // 0: go.PaohuziKeZi.Code:type_name -> go.PHZOperate
	23, // 1: go.PaohuziHint.Code:type_name -> go.PHZOperate
	24, // 2: go.PaohuziPlayer.MyInfo:type_name -> go.PlayerInfo
	1,  // 3: go.PaohuziPlayer.KeZiCards:type_name -> go.PaohuziKeZi
	2,  // 4: go.PaohuziPlayer.OpHints:type_name -> go.PaohuziHint
	3,  // 5: go.EnterGamePHZResp.Player:type_name -> go.PaohuziPlayer
	3,  // 6: go.PaohuziSceneResp.AllPlayers:type_name -> go.PaohuziPlayer
	25, // 7: go.PaohuziStateFreeResp.Times:type_name -> go.TimeInfo
	25, // 8: go.PaohuziStateDrawResp.Times:type_name -> go.TimeInfo
	25, // 9: go.PaohuziStateDecideResp.Times:type_name -> go.TimeInfo
	25, // 10: go.PaohuziStateStartResp.Times:type_name -> go.TimeInfo
	25, // 11: go.PaohuziStatePlayingResp.Times:type_name -> go.TimeInfo
	25, // 12: go.PaohuziStateWaitOperateResp.Times:type_name -> go.TimeInfo
	25, // 13: go.PaohuziStateOpenResp.Times:type_name -> go.TimeInfo
	3,  // 14: go.PaohuziStateOpenResp.AllPlayers:type_name -> go.PaohuziPlayer
	25, // 15: go.PaohuziStateOverResp.Times:type_name -> go.TimeInfo
	23, // 16: go.PaohuziOperateReq.Code:type_name -> go.PHZOperate
	23, // 17: go.PaohuziOperateResp.Code:type_name -> go.PHZOperate
	2,  // 18: go.PaohuziHintResp.Hints:type_name -> go.PaohuziHint
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_paohuzi_proto_init() }
func file_paohuzi_proto_init() {
	if File_paohuzi_proto != nil {
		return
	}
	file_gamecomm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_paohuzi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziKeZi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziHint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterGamePHZResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziSceneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateFreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateDecideResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateStartResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStatePlayingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateWaitOperateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziStateOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziReadyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziShowDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziOutCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziOutCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziOperateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziOperateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paohuzi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaohuziHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paohuzi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_paohuzi_proto_goTypes,
		DependencyIndexes: file_paohuzi_proto_depIdxs,
		EnumInfos:         file_paohuzi_proto_enumTypes,
		MessageInfos:      file_paohuzi_proto_msgTypes,
	}.Build()
	File_paohuzi_proto = out.File
	file_paohuzi_proto_rawDesc = nil
	file_paohuzi_proto_goTypes = nil
	file_paohuzi_proto_depIdxs = nil
}
